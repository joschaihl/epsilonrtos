Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_udivmodhi4.o)
                              ./src/kernel.o (__udivmodhi4)
/usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_divmodhi4.o)
                              ./src/kernel.o (__divmodhi4)
/usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr25/crttn45.o (exit)
/usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_copy_data.o)
                              ./src/timetest.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_clear_bss.o)
                              ./src/kernel.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

b                   0x1               ./src/timetest.o
a                   0x4               ./src/timetest.o
currentScheduler    0x6               ./src/kernel.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr25/crttn45.o
LOAD ./src/halavr.o
LOAD ./src/kernel.o
LOAD ./src/timetest.o
LOAD /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr25/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x814
 *(.vectors)
 .vectors       0x00000000       0x1e /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr25/crttn45.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000001e                . = ALIGN (0x2)
                0x0000001e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000001e        0x0 linker stubs
 *(.trampolines*)
                0x0000001e                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000001e                __ctors_start = .
 *(.ctors)
                0x0000001e                __ctors_end = .
                0x0000001e                __dtors_start = .
 *(.dtors)
                0x0000001e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000001e        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr25/crttn45.o
                0x0000001e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000001e        0xc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr25/crttn45.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000002a       0x16 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_copy_data.o)
                0x0000002a                __do_copy_data
 .init4         0x00000040       0x10 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_clear_bss.o)
                0x00000040                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000050        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr25/crttn45.o
 *(.init9)
 *(.text)
 .text          0x00000054        0x2 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr25/crttn45.o
                0x00000054                __vector_1
                0x00000054                __vector_12
                0x00000054                __bad_interrupt
                0x00000054                __vector_6
                0x00000054                __vector_3
                0x00000054                __vector_11
                0x00000054                __vector_13
                0x00000054                __vector_7
                0x00000054                __vector_4
                0x00000054                __vector_9
                0x00000054                __vector_2
                0x00000054                __vector_8
                0x00000054                __vector_14
                0x00000054                __vector_10
 .text          0x00000056        0x0 ./src/halavr.o
 .text          0x00000056        0x0 ./src/kernel.o
 .text          0x00000056        0x0 ./src/timetest.o
 .text          0x00000056        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_udivmodhi4.o)
 .text          0x00000056        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_divmodhi4.o)
 .text          0x00000056        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_exit.o)
 .text          0x00000056        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_copy_data.o)
 .text          0x00000056        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_clear_bss.o)
                0x00000056                . = ALIGN (0x2)
 *(.text.*)
 .text.initTask
                0x00000056       0xd2 ./src/kernel.o
                0x00000056                initTask
 .text.sleep    0x00000128       0xa4 ./src/kernel.o
                0x00000128                sleep
 .text.decrementPause
                0x000001cc       0xb0 ./src/kernel.o
                0x000001cc                decrementPause
 .text.allTasksFinished
                0x0000027c       0x64 ./src/kernel.o
                0x0000027c                allTasksFinished
 .text.startRRScheduler
                0x000002e0       0xe4 ./src/kernel.o
                0x000002e0                startRRScheduler
 .text.nextScheduleItem
                0x000003c4       0x36 ./src/kernel.o
                0x000003c4                nextScheduleItem
 .text.incrementTime
                0x000003fa       0xb8 ./src/kernel.o
                0x000003fa                incrementTime
 .text.__vector_5
                0x000004b2      0x108 ./src/kernel.o
                0x000004b2                __vector_5
 .text.setup    0x000005ba       0x68 ./src/timetest.o
                0x000005ba                setup
 .text.task_A   0x00000622       0x8c ./src/timetest.o
                0x00000622                task_A
 .text.task_B   0x000006ae       0x6a ./src/timetest.o
                0x000006ae                task_B
 .text.main     0x00000718       0xaa ./src/timetest.o
                0x00000718                main
 .text.libgcc.mul
                0x000007c2        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x000007c2       0x28 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_udivmodhi4.o)
                0x000007c2                __udivmodhi4
 .text.libgcc   0x000007ea        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x000007ea        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x000007ea        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x000007ea        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x000007ea        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x000007ea       0x26 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_divmodhi4.o)
                0x000007ea                __divmodhi4
                0x000007ea                _div
 .text.libgcc   0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_clear_bss.o)
                0x00000810                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000810        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_exit.o)
                0x00000810                exit
                0x00000810                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000810        0x4 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x00000814                _etext = .

.data           0x00800060       0xa4 load address 0x00000814
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr25/crttn45.o
 .data          0x00800060        0x0 ./src/halavr.o
 .data          0x00800060        0x0 ./src/kernel.o
 .data          0x00800060        0x0 ./src/timetest.o
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_udivmodhi4.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_divmodhi4.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_exit.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.taskstack_A
                0x00800060       0x42 ./src/timetest.o
                0x00800060                taskstack_A
 .data.taskobj_A
                0x008000a2        0xe ./src/timetest.o
                0x008000a2                taskobj_A
 .data.taskstack_B
                0x008000b0       0x42 ./src/timetest.o
                0x008000b0                taskstack_B
 .data.taskobj_B
                0x008000f2        0xe ./src/timetest.o
                0x008000f2                taskobj_B
 .data.taskset  0x00800100        0x4 ./src/timetest.o
                0x00800100                taskset
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800104                . = ALIGN (0x2)
                0x00800104                _edata = .
                0x00800104                PROVIDE (__data_end, .)

.bss            0x00800104       0x12
                0x00800104                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800104        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr25/crttn45.o
 .bss           0x00800104        0x0 ./src/halavr.o
 .bss           0x00800104        0x0 ./src/kernel.o
 .bss           0x00800104        0x0 ./src/timetest.o
 .bss           0x00800104        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_udivmodhi4.o)
 .bss           0x00800104        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_divmodhi4.o)
 .bss           0x00800104        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_exit.o)
 .bss           0x00800104        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_copy_data.o)
 .bss           0x00800104        0x0 /usr/lib/gcc/avr/4.7.2/avr25/libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.currentTime
                0x00800104        0x7 ./src/kernel.o
                0x00800104                currentTime
 *(COMMON)
 COMMON         0x0080010b        0x6 ./src/kernel.o
                0x0080010b                currentScheduler
 COMMON         0x00800111        0x5 ./src/timetest.o
                0x00800111                b
                0x00800112                a
                0x00800116                PROVIDE (__bss_end, .)
                0x00000814                __data_load_start = LOADADDR (.data)
                0x000008b8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800116        0x0
                0x00800116                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800116                PROVIDE (__noinit_end, .)
                0x00800116                _end = .
                0x00800116                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x16f8
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr25/crttn45.o
 .stab          0x000006cc      0x378 ./src/halavr.o
                                0x384 (size before relaxing)
 .stab          0x00000a44      0x8e8 ./src/kernel.o
                                0xae0 (size before relaxing)
 .stab          0x0000132c      0x3cc ./src/timetest.o
                                0x708 (size before relaxing)

.stabstr        0x00000000      0xe2f
 *(.stabstr)
 .stabstr       0x00000000      0xe2f /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr25/crttn45.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x11
 *(.comment)
 .comment       0x00000000       0x11 ./src/halavr.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 ./src/kernel.o
 .comment       0x00000000       0x12 ./src/timetest.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(epsilonRTOS.elf elf32-avr)
LOAD linker stubs
