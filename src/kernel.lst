   1               		.file	"kernel.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
 119               	.global	currentTime
 120               	.global	currentTime
 121               		.section .bss
 124               	currentTime:
 125 0000 0000 0000 		.skip 7,0
 125      0000 00
 126               		.text
 129               	.global	initTask
 131               	initTask:
   1:kernel.c      **** /*
   2:kernel.c      ****  * kernel.c
   3:kernel.c      ****  *
   4:kernel.c      ****  *  Created on: 24.04.2015
   5:kernel.c      ****  *      Author: joscha
   6:kernel.c      ****  */
   7:kernel.c      **** 
   8:kernel.c      **** #include "kernel.h"
   9:kernel.c      **** 
  10:kernel.c      **** typedef struct {
  11:kernel.c      **** 	TASK **tasks;
  12:kernel.c      **** 	u08 current_task;
  13:kernel.c      **** 	u08 tasks_length;
  14:kernel.c      **** 	u16 stackPointer;
  15:kernel.c      **** } SCHEDULER;
  16:kernel.c      **** 
  17:kernel.c      **** typedef struct {
  18:kernel.c      ****    u08 hours;
  19:kernel.c      ****    u08 minutes;
  20:kernel.c      ****    u08 seconds;
  21:kernel.c      ****    u16 ms;
  22:kernel.c      ****    u16 us;
  23:kernel.c      **** } TIME;
  24:kernel.c      **** 
  25:kernel.c      **** TIME currentTime = {0, 0, 0, 0, 0};
  26:kernel.c      **** 
  27:kernel.c      **** SCHEDULER currentScheduler;
  28:kernel.c      **** 
  29:kernel.c      **** void initTask(TASK *task)
  30:kernel.c      **** {
 132               	tTask:
 134               	.LM0:
 135 0000 DF93      	.LFBB1:
 136 0002 CF93      		push r29
 137 0004 00D0      		push r28
 138 0006 00D0      		rcall .
 139 0008 0F92      		rcall .
 140 000a CDB7      		push __tmp_reg__
 141 000c DEB7      		in r28,__SP_L__
 142               		in r29,__SP_H__
 143               	/* prologue: function */
 144 000e 9D83      	/* frame size = 5 */
 145 0010 8C83      		std Y+5,r25
  31:kernel.c      ****    u08 i, pc_high, pc_low;
  32:kernel.c      **** 	
  33:kernel.c      **** 	if(task->taskState == TASK_UNINITIALIZED)
 146               	e = 5 */
 147               		std Y+5,r25
 148 0012 EC81      		std Y+4,r24
 150 0016 8585      	.LM1:
 151 0018 8823      		ldd r30,Y+4
 152 001a 01F0      		ldd r31,Y+5
 153 001c 00C0      		ldd r24,Z+13
  34:kernel.c      **** 	{
  35:kernel.c      **** 		 // Set Stack Address
  36:kernel.c      ****        for(i = 0; i < (task->stackSize -2); i++)
 154               	4
 155               		ldd r31,Y+5
 156 001e 1B82      		ldd r24,Z+13
 157 0020 00C0      		tst r24
 158               		breq .+2
  37:kernel.c      ****        {
  38:kernel.c      ****           task->stack[i] = 0;
 159               		ldd r24,Z+13
 160               		tst r24
 161 0022 EC81      		breq .+2
 162 0024 FD81      		rjmp .L5
 164 0028 3581      	.LM2:
 165 002a 8B81      		std Y+3,__zero_reg__
 166 002c 882F      		rjmp .L3
 167 002e 90E0      	.L4:
 169 0032 E80F      	.LM3:
 170 0034 F91F      		ldd r30,Y+4
 171 0036 1082      		ldd r31,Y+5
 172               		ldd r18,Z+4
 173               		ldd r19,Z+5
 174 0038 8B81      		ldd r24,Y+3
 175 003a 8F5F      		mov r24,r24
 176 003c 8B83      		ldi r25,lo8(0)
 177               		movw r30,r18
 178 003e 8B81      		add r30,r24
 179 0040 282F      		adc r31,r25
 180 0042 30E0      		st Z,__zero_reg__
 182 0046 FD81      	.LM4:
 183 0048 8085      		ldd r24,Y+3
 184 004a 882F      		subi r24,lo8(-(1))
 185 004c 90E0      		std Y+3,r24
 186 004e 0297      	.L3:
 187 0050 2817      		ldd r24,Y+3
 188 0052 3907      		mov r18,r24
 189 0054 04F0      		ldi r19,lo8(0)
  39:kernel.c      ****        }
  40:kernel.c      ****        pc_high = (task->programmCounter >> 8);
 190               	o8(0)
 191               		ldd r30,Y+4
 192 0056 EC81      		ldd r31,Y+5
 193 0058 FD81      		ldd r24,Z+8
 194 005a 8281      		mov r24,r24
 195 005c 9381      		ldi r25,lo8(0)
 196 005e 892F      		sbiw r24,2
 197 0060 9927      		cp r18,r24
 198 0062 8A83      		cpc r19,r25
  41:kernel.c      ****        pc_low =  0xff & task->programmCounter;
 199               	,2
 200               		cp r18,r24
 201 0064 EC81      		cpc r19,r25
 202 0066 FD81      		brlt .L4
 204 006a 9381      	.LM5:
 205 006c 8983      		ldd r30,Y+4
  42:kernel.c      ****        i++;
 206               	LM5-.LFBB1
 207               	.LM5:
 208 006e 8B81      		ldd r30,Y+4
 209 0070 8F5F      		ldd r31,Y+5
 210 0072 8B83      		ldd r24,Z+2
  43:kernel.c      ****        task->stack[i] = pc_high;
 211               	0,Y+4
 212               		ldd r31,Y+5
 213 0074 EC81      		ldd r24,Z+2
 214 0076 FD81      		ldd r25,Z+3
 215 0078 2481      		mov r24,r25
 216 007a 3581      		clr r25
 217 007c 8B81      		std Y+2,r24
 219 0080 90E0      	.LM6:
 220 0082 F901      		ldd r30,Y+4
 221 0084 E80F      		ldd r31,Y+5
 222 0086 F91F      		ldd r24,Z+2
 223 0088 8A81      		ldd r25,Z+3
 224 008a 8083      		std Y+1,r24
  44:kernel.c      ****        i++;
 225               	 r25,Z+3
 226               		std Y+1,r24
 228 008e 8F5F      	.LM7:
 229 0090 8B83      		ldd r24,Y+3
  45:kernel.c      ****        task->stack[i] = pc_low;
 230               	LM7-.LFBB1
 231               	.LM7:
 232 0092 EC81      		ldd r24,Y+3
 233 0094 FD81      		subi r24,lo8(-(1))
 234 0096 2481      		std Y+3,r24
 236 009a 8B81      	.LM8:
 237 009c 882F      		ldd r30,Y+4
 238 009e 90E0      		ldd r31,Y+5
 239 00a0 F901      		ldd r18,Z+4
 240 00a2 E80F      		ldd r19,Z+5
 241 00a4 F91F      		ldd r24,Y+3
 242 00a6 8981      		mov r24,r24
 243 00a8 8083      		ldi r25,lo8(0)
  46:kernel.c      **** 		 // Set Task Ready
  47:kernel.c      **** 		 task->taskState = TASK_RUNNING;		
 244               	4,r24
 245               		ldi r25,lo8(0)
 246 00aa EC81      		movw r30,r18
 247 00ac FD81      		add r30,r24
 248 00ae 81E0      		adc r31,r25
 249 00b0 8587      		ldd r24,Y+2
 250               		st Z,r24
  48:kernel.c      **** 	}
  49:kernel.c      **** }
 253               	.LM9:
 254 00b2 0F90      		ldd r24,Y+3
 255 00b4 0F90      		subi r24,lo8(-(1))
 256 00b6 0F90      		std Y+3,r24
 258 00ba 0F90      	.LM10:
 259 00bc CF91      		ldd r30,Y+4
 260 00be DF91      		ldd r31,Y+5
 261 00c0 0895      		ldd r18,Z+4
 262               		ldd r19,Z+5
 263               		ldd r24,Y+3
 264               		mov r24,r24
 265               		ldi r25,lo8(0)
 266               		movw r30,r18
 267               		add r30,r24
 268               		adc r31,r25
 269               		ldd r24,Y+1
 270               		st Z,r24
 272               	.LM11:
 273               		ldd r30,Y+4
  50:kernel.c      **** 
  51:kernel.c      **** void sleep(u32 pause_us)
  52:kernel.c      **** {
 274               	ldd r30,Y+4
 275               		ldd r31,Y+5
 276               		ldi r24,lo8(1)
 277 00c2 DF93      		std Z+13,r24
 278 00c4 CF93      	.L5:
 279 00c6 CDB7      	/* epilogue start */
 281 00ca 2797      	.LM12:
 282 00cc 0FB6      		pop __tmp_reg__
 283 00ce F894      		pop __tmp_reg__
 284 00d0 DEBF      		pop __tmp_reg__
 285 00d2 0FBE      		pop __tmp_reg__
 286 00d4 CDBF      		pop __tmp_reg__
 287               		pop r28
 288               		pop r29
 289 00d6 6C83      		ret
  53:kernel.c      **** 	TASK *task;
  54:kernel.c      **** 	BOOL pause = 0;
 293               	,0,0,2
  55:kernel.c      **** 	task = currentScheduler.tasks[currentScheduler.current_task];
 296               	n	192,0,0,.LFBB1-.LFBB1
 298 00e0 2091 0000 	.Lscope1:
 301 00ec 882F      	.global	sleep
 303 00f0 880F      	sleep:
 305 00f4 F901      	.LM13:
 306 00f6 E80F      	.LFBB2:
 307 00f8 F91F      		push r29
 308 00fa 8081      		push r28
 309 00fc 9181      		in r28,__SP_L__
 310 00fe 9B83      		in r29,__SP_H__
 311 0100 8A83      		sbiw r28,7
  56:kernel.c      **** 	//if(task->taskState == TASK_RUNNING)
  57:kernel.c      **** 	//{
  58:kernel.c      **** 	  // cli();
  59:kernel.c      **** 		task->pause_us = pause_us;
 312               	sbiw r28,7
 313               		in __tmp_reg__,__SREG__
 314 0102 EA81      		cli
 315 0104 FB81      		out __SP_H__,r29
 316 0106 8C81      		out __SREG__,__tmp_reg__
 317 0108 9D81      		out __SP_L__,r28
 318 010a AE81      	/* prologue: function */
 319 010c BF81      	/* frame size = 7 */
 320 010e 8187      		std Y+4,r22
 321 0110 9287      		std Y+5,r23
 322 0112 A387      		std Y+6,r24
 323 0114 B487      		std Y+7,r25
  60:kernel.c      **** 		task->taskState = TASK_PAUSE;
 324               	,r24
 325               		std Y+7,r25
 327 0118 FB81      	.LM14:
 328 011a 82E0      		std Y+1,__zero_reg__
 330               	.LM15:
  61:kernel.c      **** 	//	sei();
  62:kernel.c      **** 		
  63:kernel.c      **** 		do
  64:kernel.c      **** 		{
  65:kernel.c      **** 			pause = (currentScheduler.tasks[currentScheduler.current_task]->taskState == TASK_PAUSE);
 331               	,0,55,.LM15-.LFBB2
 332               	.LM15:
 333 011e 2091 0000 		lds r18,currentScheduler
 334 0122 3091 0000 		lds r19,(currentScheduler)+1
 335 0126 8091 0000 		lds r24,currentScheduler+2
 336 012a 882F      		mov r24,r24
 337 012c 90E0      		ldi r25,lo8(0)
 338 012e 880F      		lsl r24
 339 0130 991F      		rol r25
 340 0132 F901      		movw r30,r18
 341 0134 E80F      		add r30,r24
 342 0136 F91F      		adc r31,r25
 343 0138 0190      		ld r24,Z
 344 013a F081      		ldd r25,Z+1
 345 013c E02D      		std Y+3,r25
 346 013e 8585      		std Y+2,r24
 348 0142 8230      	.LM16:
 349 0144 01F4      		ldd r30,Y+2
 350 0146 81E0      		ldd r31,Y+3
 351 0148 8983      		ldd r24,Y+4
 352               		ldd r25,Y+5
  66:kernel.c      **** 		} while(pause);
 353               		ldd r25,Y+5
 354               		ldd r26,Y+6
 355 014a 8981      		ldd r27,Y+7
 356 014c 8823      		std Z+9,r24
 357 014e 01F4      		std Z+10,r25
 358               		std Z+11,r26
  67:kernel.c      **** 	//}
  68:kernel.c      **** }
 359               	std Z+10,r25
 360               		std Z+11,r26
 361 0150 2796      		std Z+12,r27
 363 0154 F894      	.LM17:
 364 0156 DEBF      		ldd r30,Y+2
 365 0158 0FBE      		ldd r31,Y+3
 366 015a CDBF      		ldi r24,lo8(2)
 367 015c CF91      		std Z+13,r24
 368 015e DF91      	.L8:
 370               	.LM18:
 371               		lds r18,currentScheduler
 372               		lds r19,(currentScheduler)+1
 373               		lds r24,currentScheduler+2
 374               		mov r24,r24
 375               		ldi r25,lo8(0)
 376               		lsl r24
 377               		rol r25
 378               		movw r30,r18
 379               		add r30,r24
  69:kernel.c      **** 
  70:kernel.c      **** void decrementPause(void)
  71:kernel.c      **** {
 380               	dd r30,r24
 381               		adc r31,r25
 382               		ld __tmp_reg__,Z+
 383 0162 DF93      		ld r31,Z
 384 0164 CF93      		mov r30,__tmp_reg__
 385 0166 00D0      		ldd r24,Z+13
 386 0168 0F92      		std Y+1,__zero_reg__
 387 016a CDB7      		cpi r24,lo8(2)
 388 016c DEB7      		brne .L7
 389               		ldi r24,lo8(1)
 390               		std Y+1,r24
  72:kernel.c      ****    u08 i;
  73:kernel.c      ****    TASK *task;
  74:kernel.c      **** 	for(i = 0;	i < currentScheduler.tasks_length; i++)
 391               	,lo8(1)
 392               		std Y+1,r24
 393 016e 1B82      	.L7:
 395               	.LM19:
  75:kernel.c      **** 	{
  76:kernel.c      **** 		task = currentScheduler.tasks[i];
 396               	6,.LM19-.LFBB2
 397               	.LM19:
 398 0172 2091 0000 		ldd r24,Y+1
 399 0176 3091 0000 		tst r24
 400 017a 8B81      		brne .L8
 401 017c 882F      	/* epilogue start */
 403 0180 880F      	.LM20:
 404 0182 991F      		adiw r28,7
 405 0184 F901      		in __tmp_reg__,__SREG__
 406 0186 E80F      		cli
 407 0188 F91F      		out __SP_H__,r29
 408 018a 8081      		out __SREG__,__tmp_reg__
 409 018c 9181      		out __SP_L__,r28
 410 018e 9A83      		pop r28
 411 0190 8983      		pop r29
  77:kernel.c      **** 		if(task->taskState == TASK_PAUSE)
 412               	
 413               		pop r29
 414 0192 E981      		ret
  78:kernel.c      **** 		{
  79:kernel.c      ****       	if(task->pause_us <= TIMER_DELAY_US)
 419               	,0,0,.LFBB2-.LFBB2
 421 019c E981      	.Lscope2:
 423 01a0 8185      	.global	decrementPause
 425 01a4 A385      	decrementPause:
 427 01a8 8B3F      	.LM21:
 428 01aa 9105      	.LFBB3:
 429 01ac A105      		push r29
 430 01ae B105      		push r28
 431 01b0 00F4      		rcall .
  80:kernel.c      ****       	{
  81:kernel.c      ****       		task->pause_us = 0;
 432               	r28
 433               		rcall .
 434 01b2 E981      		push __tmp_reg__
 435 01b4 FA81      		in r28,__SP_L__
 436 01b6 1186      		in r29,__SP_H__
 437 01b8 1286      	/* prologue: function */
 438 01ba 1386      	/* frame size = 3 */
  82:kernel.c      ****       		task->taskState = TASK_RUNNING;
 440               	abn	68,0,74,.LM22-.LFBB3
 441               	.LM22:
 442 01be E981      		std Y+3,__zero_reg__
 443 01c0 FA81      		rjmp .L11
 444 01c2 81E0      	.L14:
 446 01c6 00C0      	.LM23:
 447               		lds r18,currentScheduler
  83:kernel.c      ****       	}
  84:kernel.c      ****       	else
  85:kernel.c      ****       	{
  86:kernel.c      ****       		task->pause_us -= TIMER_DELAY_US;
 448               		lds r18,currentScheduler
 449               		lds r19,(currentScheduler)+1
 450 01c8 E981      		ldd r24,Y+3
 451 01ca FA81      		mov r24,r24
 452 01cc 8185      		ldi r25,lo8(0)
 453 01ce 9285      		lsl r24
 454 01d0 A385      		rol r25
 455 01d2 B485      		movw r30,r18
 456 01d4 8A5F      		add r30,r24
 457 01d6 9040      		adc r31,r25
 458 01d8 A040      		ld r24,Z
 459 01da B040      		ldd r25,Z+1
 460 01dc E981      		std Y+2,r25
 461 01de FA81      		std Y+1,r24
 463 01e2 9287      	.LM24:
 464 01e4 A387      		ldd r30,Y+1
 465 01e6 B487      		ldd r31,Y+2
 466               		ldd r24,Z+13
 467               		cpi r24,lo8(2)
 468               		brne .L12
 470 01ea 8F5F      	.LM25:
 471 01ec 8B83      		ldd r30,Y+1
 472               		ldd r31,Y+2
 473 01ee 9091 0000 		ldd r24,Z+9
 474 01f2 8B81      		ldd r25,Z+10
 475 01f4 8917      		ldd r26,Z+11
 476 01f6 00F4      		ldd r27,Z+12
 477 01f8 00C0      		cpi r24,lo8(251)
 478               		cpc r25,__zero_reg__
  87:kernel.c      ****       	}
  88:kernel.c      ****       }
  89:kernel.c      **** 	}
  90:kernel.c      **** }
 479               	_
 480               		cpc r26,__zero_reg__
 481 01fa 0F90      		cpc r27,__zero_reg__
 482 01fc 0F90      		brsh .L13
 484 0200 CF91      	.LM26:
 485 0202 DF91      		ldd r30,Y+1
 486 0204 0895      		ldd r31,Y+2
 487               		std Z+9,__zero_reg__
 488               		std Z+10,__zero_reg__
 489               		std Z+11,__zero_reg__
 490               		std Z+12,__zero_reg__
 492               	.LM27:
 493               		ldd r30,Y+1
 494               		ldd r31,Y+2
 495               		ldi r24,lo8(1)
 496               		std Z+13,r24
  91:kernel.c      **** 
  92:kernel.c      **** BOOL allTasksFinished(void)
  93:kernel.c      **** {
 497               	std Z+13,r24
 498               		rjmp .L12
 499               	.L13:
 501 0208 CF93      	.LM28:
 502 020a 00D0      		ldd r30,Y+1
 503 020c 00D0      		ldd r31,Y+2
 504 020e CDB7      		ldd r24,Z+9
 505 0210 DEB7      		ldd r25,Z+10
 506               		ldd r26,Z+11
 507               		ldd r27,Z+12
  94:kernel.c      ****    u08 i;
  95:kernel.c      ****    TASK *task;
  96:kernel.c      ****    BOOL result = 1;
 508               	r26,Z+11
 509               		ldd r27,Z+12
 510 0212 81E0      		subi r24,lo8(-(-250))
 511 0214 8983      		sbci r25,hi8(-(-250))
  97:kernel.c      **** 	for(i = 0;	i < currentScheduler.tasks_length; i++)
 512               	250))
 513               		sbci r25,hi8(-(-250))
 514 0216 1C82      		sbci r26,hlo8(-(-250))
 515 0218 00C0      		sbci r27,hhi8(-(-250))
 516               		ldd r30,Y+1
  98:kernel.c      **** 	{
  99:kernel.c      **** 		task = currentScheduler.tasks[i];
 517               	hhi8(-(-250))
 518               		ldd r30,Y+1
 519 021a 2091 0000 		ldd r31,Y+2
 520 021e 3091 0000 		std Z+9,r24
 521 0222 8C81      		std Z+10,r25
 522 0224 882F      		std Z+11,r26
 523 0226 90E0      		std Z+12,r27
 524 0228 880F      	.L12:
 526 022c F901      	.LM29:
 527 022e E80F      		ldd r24,Y+3
 528 0230 F91F      		subi r24,lo8(-(1))
 529 0232 8081      		std Y+3,r24
 530 0234 9181      	.L11:
 531 0236 9B83      		lds r25,currentScheduler+3
 532 0238 8A83      		ldd r24,Y+3
 100:kernel.c      **** 		if(task->taskState != TASK_FINISHED)
 533               	3
 534               		ldd r24,Y+3
 535 023a EA81      		cp r24,r25
 536 023c FB81      		brsh .+2
 537 023e 8585      		rjmp .L14
 538 0240 8330      	/* epilogue start */
 101:kernel.c      **** 		{
 102:kernel.c      **** 			result = 0;
 540               	,90,.LM30-.LFBB3
 541               	.LM30:
 542 0244 1982      		pop __tmp_reg__
 543 0246 00C0      		pop __tmp_reg__
 544               		pop __tmp_reg__
 545               		pop r28
 546               		pop r29
 547 0248 8C81      		ret
 553 0254 8917      	.Lscope3:
 555               	.global	allTasksFinished
 103:kernel.c      **** 			break;
 104:kernel.c      **** 		}
 105:kernel.c      **** 	}
 106:kernel.c      **** 	return (result);
 556               	sFinished
 558 0258 8981      	allTasksFinished:
 107:kernel.c      **** }
 560               	stabn	68,0,93,.LM31-.LFBB4
 561               	.LM31:
 562 025a 0F90      	.LFBB4:
 563 025c 0F90      		push r29
 564 025e 0F90      		push r28
 565 0260 0F90      		rcall .
 566 0262 CF91      		rcall .
 567 0264 DF91      		in r28,__SP_L__
 568 0266 0895      		in r29,__SP_H__
 569               	/* prologue: function */
 570               	/* frame size = 4 */
 572               	.LM32:
 573               		ldi r24,lo8(1)
 574               		std Y+1,r24
 576               	.LM33:
 577               		std Y+4,__zero_reg__
 578               		rjmp .L17
 579               	.L20:
 581               	.LM34:
 108:kernel.c      **** 
 109:kernel.c      **** void startRRScheduler(TASK **tasks, u08 tasks_length)
 110:kernel.c      **** {
 582               	BB4
 583               	.LM34:
 584               		lds r18,currentScheduler
 585 0268 DF93      		lds r19,(currentScheduler)+1
 586 026a CF93      		ldd r24,Y+4
 587 026c 00D0      		mov r24,r24
 588 026e 00D0      		ldi r25,lo8(0)
 589 0270 0F92      		lsl r24
 590 0272 CDB7      		rol r25
 591 0274 DEB7      		movw r30,r18
 592               		add r30,r24
 593               		adc r31,r25
 594 0276 9C83      		ld r24,Z
 595 0278 8B83      		ldd r25,Z+1
 596 027a 6D83      		std Y+3,r25
 111:kernel.c      **** 	currentScheduler.stackPointer = SP + 7;
 597               	25,Z+1
 598               		std Y+3,r25
 599 027c EDE5      		std Y+2,r24
 601 0280 8081      	.LM35:
 602 0282 9181      		ldd r30,Y+2
 603 0284 0796      		ldd r31,Y+3
 604 0286 9093 0000 		ldd r24,Z+13
 605 028a 8093 0000 		cpi r24,lo8(3)
 112:kernel.c      ****    TASK *task;
 113:kernel.c      **** 	currentScheduler.current_task = 0;
 606               	24,Z+13
 607               		cpi r24,lo8(3)
 608 028e 1092 0000 		breq .L18
 114:kernel.c      **** 	currentScheduler.tasks = tasks;
 609               	13
 610               		cpi r24,lo8(3)
 611 0292 8B81      		breq .L18
 613 0296 9093 0000 	.LM36:
 614 029a 8093 0000 		std Y+1,__zero_reg__
 115:kernel.c      **** 	currentScheduler.tasks_length = tasks_length;
 615               	M36:
 616               		std Y+1,__zero_reg__
 617 029e 8D81      		rjmp .L19
 618 02a0 8093 0000 	.L18:
 116:kernel.c      **** 
 117:kernel.c      **** 	// Inititalize Tasks
 118:kernel.c      **** 	for(currentScheduler.current_task = 0;
 619               	ero_reg__
 620               		rjmp .L19
 621 02a4 1092 0000 	.L18:
 623               	.LM37:
 119:kernel.c      **** 			currentScheduler.current_task < currentScheduler.tasks_length;
 120:kernel.c      **** 			currentScheduler.current_task++)
 121:kernel.c      **** 	{
 122:kernel.c      **** 		task = currentScheduler.tasks[currentScheduler.current_task];
 624               	0,97,.LM37-.LFBB4
 625               	.LM37:
 626 02aa 2091 0000 		ldd r24,Y+4
 627 02ae 3091 0000 		subi r24,lo8(-(1))
 628 02b2 8091 0000 		std Y+4,r24
 629 02b6 882F      	.L17:
 630 02b8 90E0      		lds r25,currentScheduler+3
 631 02ba 880F      		ldd r24,Y+4
 632 02bc 991F      		cp r24,r25
 633 02be F901      		brlo .L20
 634 02c0 E80F      	.L19:
 636 02c4 8081      	.LM38:
 637 02c6 9181      		ldd r24,Y+1
 638 02c8 9A83      	/* epilogue start */
 123:kernel.c      ****       initTask(task);
 640               	LM39-.LFBB4
 641               	.LM39:
 642 02cc 8981      		pop __tmp_reg__
 643 02ce 9A81      		pop __tmp_reg__
 644 02d0 00D0      		pop __tmp_reg__
 645               		pop __tmp_reg__
 646               		pop r28
 647 02d2 8091 0000 		pop r29
 648 02d6 8F5F      		ret
 655 02e4 9817      	.Lscope4:
 124:kernel.c      **** 	}
 125:kernel.c      **** 	currentScheduler.current_task = 0;
 657               	ler
 126:kernel.c      ****    task = currentScheduler.tasks[0];
 660               	length:p(3,1)",160,0,0,5
 661               	.global	startRRScheduler
 663 02f0 F091 0000 	startRRScheduler:
 665 02f6 9181      	.LM40:
 666 02f8 9A83      	.LFBB5:
 667 02fa 8983      		push r29
 127:kernel.c      **** 	initTimer();
 668               	:
 669               	.LFBB5:
 670 02fc E3E5      		push r29
 671 02fe F0E0      		push r28
 672 0300 82E0      		rcall .
 673 0302 8083      		rcall .
 674 0304 E9E5      		push __tmp_reg__
 675 0306 F0E0      		in r28,__SP_L__
 676 0308 81E0      		in r29,__SP_H__
 677 030a 8083      	/* prologue: function */
 678               	/* frame size = 5 */
 679               		std Y+4,r25
 680 030c 7894      		std Y+3,r24
 681               		std Y+5,r22
 128:kernel.c      **** 
 129:kernel.c      **** 	set_stackpointer(task->stackPointer + WORKING_REGISTERS);
 682               	24
 683               		std Y+5,r22
 685 030e ADE5      	.LM41:
 686 0310 B0E0      		ldi r30,lo8(93)
 687 0312 E981      		ldi r31,hi8(93)
 688 0314 FA81      		ld r24,Z
 689 0316 8681      		ldd r25,Z+1
 690 0318 9781      		adiw r24,7
 691 031a 8096      		sts (currentScheduler+4)+1,r25
 692 031c 1196      		sts currentScheduler+4,r24
 694 0320 8E93      	.LM42:
 130:kernel.c      **** 	task->taskFunction();
 695               	LFBB5
 696               	.LM42:
 697 0322 E981      		sts currentScheduler+2,__zero_reg__
 699 0326 0190      	.LM43:
 700 0328 F081      		ldd r24,Y+3
 701 032a E02D      		ldd r25,Y+4
 702 032c 0995      		sts (currentScheduler)+1,r25
 703               		sts currentScheduler,r24
 131:kernel.c      **** }
 704               	rentScheduler,r24
 706 032e 0F90      	.LM44:
 707 0330 0F90      		ldd r24,Y+5
 708 0332 0F90      		sts currentScheduler+3,r24
 710 0336 0F90      	.LM45:
 711 0338 CF91      		sts currentScheduler+2,__zero_reg__
 712 033a DF91      		rjmp .L23
 713 033c 0895      	.L24:
 715               	.LM46:
 716               		lds r18,currentScheduler
 717               		lds r19,(currentScheduler)+1
 718               		lds r24,currentScheduler+2
 719               		mov r24,r24
 720               		ldi r25,lo8(0)
 721               		lsl r24
 722               		rol r25
 132:kernel.c      **** 
 133:kernel.c      **** void nextScheduleItem(void)
 134:kernel.c      **** {
 723               	4
 724               		rol r25
 725               		movw r30,r18
 726 033e DF93      		add r30,r24
 727 0340 CF93      		adc r31,r25
 728 0342 CDB7      		ld r24,Z
 729 0344 DEB7      		ldd r25,Z+1
 730               		std Y+2,r25
 731               		std Y+1,r24
 135:kernel.c      **** /*	TASK *task;
 136:kernel.c      **** 	u08 i;
 137:kernel.c      **** 	highest_task = currentScheduler.current_task;
 138:kernel.c      **** 	// Search for a running Task
 139:kernel.c      **** 	for(i=currentScheduler.current_task+1; i < currentScheduler.tasks_length -1; i++)
 140:kernel.c      **** 	{
 141:kernel.c      **** 	   task = currentScheduler.tasks[i];
 142:kernel.c      **** 	}
 143:kernel.c      **** 	for(i=0; i < currentScheduler.current_task; i++)
 144:kernel.c      **** 	{
 145:kernel.c      **** 		task = currentScheduler.tasks[i];
 146:kernel.c      **** 	}           */
 147:kernel.c      **** 	if (currentScheduler.current_task < (currentScheduler.tasks_length -1))
 732               	+2,r25
 733               		std Y+1,r24
 735 034a 282F      	.LM47:
 736 034c 30E0      		ldd r24,Y+1
 737 034e 8091 0000 		ldd r25,Y+2
 738 0352 882F      		rcall initTask
 740 0356 0197      	.LM48:
 741 0358 2817      		lds r24,currentScheduler+2
 742 035a 3907      		subi r24,lo8(-(1))
 743 035c 04F4      		sts currentScheduler+2,r24
 148:kernel.c      **** 	{
 149:kernel.c      **** 		currentScheduler.current_task++;
 744               	cheduler+2,r24
 745               	.L23:
 747 0362 8F5F      	.LM49:
 748 0364 8093 0000 		lds r25,currentScheduler+2
 749 0368 00C0      		lds r24,currentScheduler+3
 750               		cp r25,r24
 150:kernel.c      **** 	}
 151:kernel.c      **** 	else
 152:kernel.c      **** 	{
 153:kernel.c      **** 		currentScheduler.current_task = 0;
 751               	heduler+3
 752               		cp r25,r24
 753 036a 1092 0000 		brlo .L24
 755               	.LM50:
 154:kernel.c      **** 	}
 155:kernel.c      **** 	// (pop) reset task specific registers
 156:kernel.c      **** }
 756               	0,125,.LM50-.LFBB5
 757               	.LM50:
 758 036e CF91      		sts currentScheduler+2,__zero_reg__
 760 0372 0895      	.LM51:
 761               		lds r30,currentScheduler
 762               		lds r31,(currentScheduler)+1
 763               		ld r24,Z
 764               		ldd r25,Z+1
 765               		std Y+2,r25
 766               		std Y+1,r24
 157:kernel.c      **** 
 158:kernel.c      **** void incrementTime(void)
 159:kernel.c      **** {
 767               	+2,r25
 768               		std Y+1,r24
 770 0374 DF93      	.LM52:
 771 0376 CF93      		ldi r30,lo8(83)
 772 0378 CDB7      		ldi r31,hi8(83)
 773 037a DEB7      		ldi r24,lo8(2)
 774               		st Z,r24
 775               		ldi r30,lo8(89)
 160:kernel.c      ****    if((currentTime.us+TIMER_DELAY_US)==1000)
 776               	st Z,r24
 777               		ldi r30,lo8(89)
 778 037c 8091 0000 		ldi r31,hi8(89)
 779 0380 9091 0000 		ldi r24,lo8(1)
 780 0384 22E0      		st Z,r24
 781 0386 8E3E      	/* #APP */
 782 0388 9207      	 ;  127 "kernel.c" 1
 783 038a 01F0      		sei
 784 038c 00C0      	 ;  0 "" 2
 161:kernel.c      ****    {
 162:kernel.c      ****    	if((currentTime.ms+1)==1000)
 785               	rnel.c" 1
 786               		sei
 787 038e 8091 0000 	 ;  0 "" 2
 789 0396 23E0      	.LM53:
 790 0398 873E      	/* #NOAPP */
 791 039a 9207      		ldi r26,lo8(93)
 792 039c 01F4      		ldi r27,hi8(93)
 163:kernel.c      ****    	{
 164:kernel.c      ****    	   if((currentTime.seconds+1)==60)
 793               	6,lo8(93)
 794               		ldi r27,hi8(93)
 795 039e 8091 0000 		ldd r30,Y+1
 796 03a2 8B33      		ldd r31,Y+2
 797 03a4 01F4      		ldd r24,Z+6
 165:kernel.c      ****    	   {
 166:kernel.c      ****    	   	if((currentTime.minutes+1)==60)
 798               		ldd r31,Y+2
 799               		ldd r24,Z+6
 800 03a6 8091 0000 		ldd r25,Z+7
 801 03aa 8B33      		adiw r24,32
 802 03ac 01F4      		adiw r26,1
 167:kernel.c      ****    	   	{
 168:kernel.c      ****    	   		currentTime.hours = (currentTime.hours+1) % 24;
 803               		adiw r24,32
 804               		adiw r26,1
 805 03ae 8091 0000 		st X,r25
 806 03b2 882F      		st -X,r24
 808 03b6 0196      	.LM54:
 809 03b8 28E1      		ldd r30,Y+1
 810 03ba 30E0      		ldd r31,Y+2
 811 03bc B901      		ld __tmp_reg__,Z+
 812 03be 00D0      		ld r31,Z
 813 03c0 8093 0000 		mov r30,__tmp_reg__
 814               		icall
 169:kernel.c      ****    	   	}
 170:kernel.c      ****    	   	currentTime.minutes = (currentTime.minutes+1) % 60;
 815               	mp_reg__
 816               		icall
 817 03c4 8091 0000 	/* epilogue start */
 819 03ca 90E0      	.LM55:
 820 03cc 0196      		pop __tmp_reg__
 821 03ce 2CE3      		pop __tmp_reg__
 822 03d0 30E0      		pop __tmp_reg__
 823 03d2 B901      		pop __tmp_reg__
 824 03d4 00D0      		pop __tmp_reg__
 825 03d6 8093 0000 		pop r28
 826               		pop r29
 171:kernel.c      ****    	   }
 172:kernel.c      ****    	   currentTime.seconds = (currentTime.seconds+1) % 60;
 827               	r28
 828               		pop r29
 829 03da 8091 0000 		ret
 834 03e6 30E0      	.Lscope5:
 836 03ea 00D0      	.global	nextScheduleItem
 838               	nextScheduleItem:
 173:kernel.c      ****    	}
 174:kernel.c      ****    	currentTime.ms = (currentTime.ms+1) % 1000;
 839               	eduleItem:
 841 03f0 8091 0000 	.LM56:
 842 03f4 9091 0000 	.LFBB6:
 843 03f8 0196      		push r29
 844 03fa 28EE      		push r28
 845 03fc 33E0      		in r28,__SP_L__
 846 03fe B901      		in r29,__SP_H__
 847 0400 00D0      	/* prologue: function */
 848 0402 9093 0000 	/* frame size = 0 */
 850               	.LM57:
 175:kernel.c      ****    }
 176:kernel.c      ****    currentTime.us = (currentTime.us+TIMER_DELAY_US) % 1000;
 851               	57-.LFBB6
 852               	.LM57:
 853 040a 8091 0000 		lds r24,currentScheduler+2
 854 040e 9091 0000 		mov r18,r24
 855 0412 8650      		ldi r19,lo8(0)
 856 0414 9F4F      		lds r24,currentScheduler+3
 857 0416 28EE      		mov r24,r24
 858 0418 33E0      		ldi r25,lo8(0)
 859 041a B901      		sbiw r24,1
 860 041c 00D0      		cp r18,r24
 861 041e 9093 0000 		cpc r19,r25
 862 0422 8093 0000 		brge .L27
 177:kernel.c      **** }
 864               	49,.LM58-.LFBB6
 865               	.LM58:
 866 0426 CF91      		lds r24,currentScheduler+2
 867 0428 DF91      		subi r24,lo8(-(1))
 868 042a 0895      		sts currentScheduler+2,r24
 869               		rjmp .L29
 870               	.L27:
 872               	.LM59:
 873               		sts currentScheduler+2,__zero_reg__
 874               	.L29:
 178:kernel.c      **** 
 179:kernel.c      **** SCHEDULER_TIMER()
 180:kernel.c      **** {  // Testen ob nicht alle Tasks beendet worden sind
 875               	ero_reg__
 876               	.L29:
 877               	/* epilogue start */
 879               	.LM60:
 181:kernel.c      **** 	// falls ja:
 182:kernel.c      **** 	if(!allTasksFinished())
 880               	6,.LM60-.LFBB6
 881               	.LM60:
 882 042c 00D0      		pop r28
 883 042e 8823      		pop r29
 884 0430 01F0      		ret
 886               	.Lscope6:
 183:kernel.c      **** 	{
 184:kernel.c      ****    	save_registers();
 887               	heduleItem
 888               	.Lscope6:
 890               	.global	incrementTime
 892               	incrementTime:
 894 0436 1F92      	.LM61:
 895               	.LFBB7:
 896               		push r29
 897 0438 2F92      		push r28
 898               		in r28,__SP_L__
 899               		in r29,__SP_H__
 900 043a 3F92      	/* prologue: function */
 901               	/* frame size = 0 */
 903 043c 4F92      	.LM62:
 904               		lds r24,currentTime+5
 905               		lds r25,(currentTime+5)+1
 906 043e 5F92      		ldi r18,hi8(750)
 907               		cpi r24,lo8(750)
 908               		cpc r25,r18
 909 0440 6F92      		breq .+2
 910               		rjmp .L31
 912 0442 7F92      	.LM63:
 913               		lds r24,currentTime+3
 914               		lds r25,(currentTime+3)+1
 915 0444 8F92      		ldi r18,hi8(999)
 916               		cpi r24,lo8(999)
 917               		cpc r25,r18
 918 0446 9F92      		brne .L32
 920               	.LM64:
 921 0448 AF92      		lds r24,currentTime+2
 922               		cpi r24,lo8(59)
 923               		brne .L33
 925               	.LM65:
 926               		lds r24,currentTime+1
 927 044c CF92      		cpi r24,lo8(59)
 928               		brne .L34
 930 044e DF92      	.LM66:
 931               		lds r24,currentTime
 932               		mov r24,r24
 933 0450 EF92      		ldi r25,lo8(0)
 934               		adiw r24,1
 935               		ldi r18,lo8(24)
 936 0452 FF92      		ldi r19,hi8(24)
 937               		movw r22,r18
 938               		rcall __divmodhi4
 939 0454 0F93      		sts currentTime,r24
 940               	.L34:
 942 0456 1F93      	.LM67:
 943               		lds r24,currentTime+1
 944               		mov r24,r24
 945 0458 2F93      		ldi r25,lo8(0)
 946               		adiw r24,1
 947               		ldi r18,lo8(60)
 948 045a 3F93      		ldi r19,hi8(60)
 949               		movw r22,r18
 950               		rcall __divmodhi4
 951 045c 4F93      		sts currentTime+1,r24
 952               	.L33:
 954 045e 5F93      	.LM68:
 955               		lds r24,currentTime+2
 956               		mov r24,r24
 957 0460 6F93      		ldi r25,lo8(0)
 958               		adiw r24,1
 959               		ldi r18,lo8(60)
 960 0462 7F93      		ldi r19,hi8(60)
 961               		movw r22,r18
 962               		rcall __divmodhi4
 963 0464 8F93      		sts currentTime+2,r24
 964               	.L32:
 966 0466 9F93      	.LM69:
 967               		lds r24,currentTime+3
 968               		lds r25,(currentTime+3)+1
 969 0468 AF93      		adiw r24,1
 970               		ldi r18,lo8(1000)
 971               		ldi r19,hi8(1000)
 972 046a BF93      		movw r22,r18
 973               		rcall __udivmodhi4
 974               		sts (currentTime+3)+1,r25
 975 046c CF93      		sts currentTime+3,r24
 976               	.L31:
 978 046e DF93      	.LM70:
 979               		lds r24,currentTime+5
 980               		lds r25,(currentTime+5)+1
 981 0470 EF93      		subi r24,lo8(-(250))
 982               		sbci r25,hi8(-(250))
 983               		ldi r18,lo8(1000)
 984 0472 FF93      		ldi r19,hi8(1000)
 985               		movw r22,r18
 185:kernel.c      **** 		TASK *task;
 186:kernel.c      **** 		task = currentScheduler.tasks[currentScheduler.current_task];
 986               	movw r22,r18
 987               		rcall __udivmodhi4
 988               		sts (currentTime+5)+1,r25
 989 0474 2091 0000 		sts currentTime+5,r24
 990 0478 3091 0000 	/* epilogue start */
 992 0480 882F      	.LM71:
 993 0482 90E0      		pop r28
 994 0484 880F      		pop r29
 995 0486 991F      		ret
 997 048a E80F      	.Lscope7:
 999 048e 8081      	.global	__vector_9
 1001 0492 9A83      	__vector_9:
 187:kernel.c      **** 
 188:kernel.c      **** 	// Stackpointer vom letzten task sichern
 189:kernel.c      **** 		task->stackPointer = get_stackpointer();
 1003               	M72-.LFBB8
 1004               	.LM72:
 1005 0496 EDE5      	.LFBB8:
 1006 0498 F0E0      	/* prologue: naked */
 1007 049a 8081      	/* frame size = 2 */
 1009 049e E981      	.LM73:
 1010 04a0 FA81      		rcall allTasksFinished
 1011 04a2 9783      		tst r24
 1012 04a4 8683      		breq .+2
 190:kernel.c      **** 		incrementTime();
 1013               	ished
 1014               		tst r24
 1015 04a6 00D0      		breq .+2
 191:kernel.c      **** 		decrementPause();
 1016               	TasksFinished
 1017               		tst r24
 1018 04a8 00D0      		breq .+2
 192:kernel.c      **** 
 193:kernel.c      **** 	
 194:kernel.c      **** 		nextScheduleItem();
 1019               	asksFinished
 1020               		tst r24
 1021 04aa 00D0      		breq .+2
 195:kernel.c      ****   		task = currentScheduler.tasks[currentScheduler.current_task];
 1022               	asksFinished
 1023               		tst r24
 1024 04ac 2091 0000 		breq .+2
 1025 04b0 3091 0000 		rjmp .L37
 1026 04b4 8091 0000 	.LBB2:
 1028 04ba 90E0      	.LM74:
 1029 04bc 880F      	/* #APP */
 1030 04be 991F      	 ;  184 "kernel.c" 1
 1031 04c0 F901      		push    r0
 1032 04c2 E80F      	 ;  0 "" 2
 1033 04c4 F91F      	 ;  184 "kernel.c" 1
 1034 04c6 8081      		push    r1
 1035 04c8 9181      	 ;  0 "" 2
 1036 04ca 9A83      	 ;  184 "kernel.c" 1
 1037 04cc 8983      		push    r2
 196:kernel.c      **** 		set_stackpointer(task->stackPointer);
 1038               	l.c" 1
 1039               		push    r2
 1040 04ce ADE5      	 ;  0 "" 2
 1041 04d0 B0E0      	 ;  184 "kernel.c" 1
 1042 04d2 E981      		push    r3
 1043 04d4 FA81      	 ;  0 "" 2
 1044 04d6 8681      	 ;  184 "kernel.c" 1
 1045 04d8 9781      		push    r4
 1046 04da 1196      	 ;  0 "" 2
 1047 04dc 9C93      	 ;  184 "kernel.c" 1
 1048 04de 8E93      		push    r5
 197:kernel.c      **** 		load_registers();
 1049               	kernel.c" 1
 1050               		push    r5
 1051               	 ;  0 "" 2
 1052               	 ;  184 "kernel.c" 1
 1053 04e0 FF91      		push    r6
 1054               	 ;  0 "" 2
 1055               	 ;  184 "kernel.c" 1
 1056 04e2 EF91      		push    r7
 1057               	 ;  0 "" 2
 1058               	 ;  184 "kernel.c" 1
 1059 04e4 DF91      		push    r8
 1060               	 ;  0 "" 2
 1061               	 ;  184 "kernel.c" 1
 1062 04e6 CF91      		push    r9
 1063               	 ;  0 "" 2
 1064               	 ;  184 "kernel.c" 1
 1065 04e8 BF91      		push    r10
 1066               	 ;  0 "" 2
 1067               	 ;  184 "kernel.c" 1
 1068 04ea AF91      		push    r11
 1069               	 ;  0 "" 2
 1070               	 ;  184 "kernel.c" 1
 1071 04ec 9F91      		push    r12
 1072               	 ;  0 "" 2
 1073               	 ;  184 "kernel.c" 1
 1074 04ee 8F91      		push    r13
 1075               	 ;  0 "" 2
 1076               	 ;  184 "kernel.c" 1
 1077 04f0 7F91      		push    r14
 1078               	 ;  0 "" 2
 1079               	 ;  184 "kernel.c" 1
 1080 04f2 6F91      		push    r15
 1081               	 ;  0 "" 2
 1082               	 ;  184 "kernel.c" 1
 1083 04f4 5F91      		push    r16
 1084               	 ;  0 "" 2
 1085               	 ;  184 "kernel.c" 1
 1086 04f6 4F91      		push    r17
 1087               	 ;  0 "" 2
 1088               	 ;  184 "kernel.c" 1
 1089 04f8 3F91      		push    r18
 1090               	 ;  0 "" 2
 1091               	 ;  184 "kernel.c" 1
 1092 04fa 2F91      		push    r19
 1093               	 ;  0 "" 2
 1094               	 ;  184 "kernel.c" 1
 1095 04fc 1F91      		push    r20
 1096               	 ;  0 "" 2
 1097               	 ;  184 "kernel.c" 1
 1098 04fe 0F91      		push    r21
 1099               	 ;  0 "" 2
 1100               	 ;  184 "kernel.c" 1
 1101 0500 FF90      		push    r22
 1102               	 ;  0 "" 2
 1103               	 ;  184 "kernel.c" 1
 1104 0502 EF90      		push    r23
 1105               	 ;  0 "" 2
 1106               	 ;  184 "kernel.c" 1
 1107 0504 DF90      		push    r24
 1108               	 ;  0 "" 2
 1109               	 ;  184 "kernel.c" 1
 1110 0506 CF90      		push    r25
 1111               	 ;  0 "" 2
 1112               	 ;  184 "kernel.c" 1
 1113 0508 BF90      		push    r26
 1114               	 ;  0 "" 2
 1115               	 ;  184 "kernel.c" 1
 1116 050a AF90      		push    r27
 1117               	 ;  0 "" 2
 1118               	 ;  184 "kernel.c" 1
 1119 050c 9F90      		push    r28
 1120               	 ;  0 "" 2
 1121               	 ;  184 "kernel.c" 1
 1122 050e 8F90      		push    r29
 1123               	 ;  0 "" 2
 1124               	 ;  184 "kernel.c" 1
 1125 0510 7F90      		push    r30
 1126               	 ;  0 "" 2
 1127               	 ;  184 "kernel.c" 1
 1128 0512 6F90      		push    r31
 1129               	 ;  0 "" 2
 1131 0514 5F90      	.LM75:
 1132               	/* #NOAPP */
 1133               		lds r18,currentScheduler
 1134 0516 4F90      		lds r19,(currentScheduler)+1
 1135               		lds r24,currentScheduler+2
 1136               		mov r24,r24
 1137 0518 3F90      		ldi r25,lo8(0)
 1138               		lsl r24
 1139               		rol r25
 1140 051a 2F90      		movw r30,r18
 1141               		add r30,r24
 1142               		adc r31,r25
 1143 051c 1F90      		ld r24,Z
 1144               		ldd r25,Z+1
 1145               		std Y+2,r25
 1146 051e 0F90      		std Y+1,r24
 1148               	.LM76:
 1149 0520 00C0      		ldi r30,lo8(93)
 1150               		ldi r31,hi8(93)
 1151               		ld r24,Z
 198:kernel.c      **** 	}
 199:kernel.c      **** 	else
 200:kernel.c      **** 	{ /* Kein Task mehr da */
 201:kernel.c      **** 	 	// Stackpointer setzen
 202:kernel.c      **** 		set_stackpointer(currentScheduler.stackPointer);
 1152               	)
 1153               		ldi r31,hi8(93)
 1154 0522 EDE5      		ld r24,Z
 1155 0524 F0E0      		ldd r25,Z+1
 1156 0526 8091 0000 		ldd r30,Y+1
 1157 052a 9091 0000 		ldd r31,Y+2
 1158 052e 9183      		std Z+7,r25
 1159 0530 8083      		std Z+6,r24
 203:kernel.c      **** 		// Timer deaktivieren
 204:kernel.c      **** 		disableTimer();
 1160               	d Z+7,r25
 1161               		std Z+6,r24
 1163 0534 F0E0      	.LM77:
 1164 0536 1082      		rcall incrementTime
 205:kernel.c      **** 	}
 206:kernel.c      ****    return_interrupt();
 1166               	n	68,0,191,.LM78-.LFBB8
 1167               	.LM78:
 1168               		rcall decrementPause
 1170 0538 1895      	.LM79:
 1171               		rcall nextScheduleItem
 207:kernel.c      **** }
 1173               	n	68,0,195,.LM80-.LFBB8
 1174               	.LM80:
 1175               		lds r18,currentScheduler
 1176               		lds r19,(currentScheduler)+1
 1177               		lds r24,currentScheduler+2
 1178               		mov r24,r24
 1179               		ldi r25,lo8(0)
 1180               		lsl r24
 1181               		rol r25
 1182               		movw r30,r18
 1183               		add r30,r24
 1184               		adc r31,r25
 1185               		ld r24,Z
 1186               		ldd r25,Z+1
DEFINED SYMBOLS
                            *ABS*:00000000 kernel.c
/tmp/user/501/ccW4wdeR.s:2      *ABS*:0000003f __SREG__
/tmp/user/501/ccW4wdeR.s:3      *ABS*:0000003e __SP_H__
/tmp/user/501/ccW4wdeR.s:4      *ABS*:0000003d __SP_L__
/tmp/user/501/ccW4wdeR.s:5      *ABS*:00000034 __CCP__
/tmp/user/501/ccW4wdeR.s:6      *ABS*:00000000 __tmp_reg__
/tmp/user/501/ccW4wdeR.s:7      *ABS*:00000001 __zero_reg__
/tmp/user/501/ccW4wdeR.s:124    .bss:00000000 currentTime
/tmp/user/501/ccW4wdeR.s:131    .text:00000000 initTask
/tmp/user/501/ccW4wdeR.s:273    .text:000000c2 sleep
                            *COM*:00000006 currentScheduler
/tmp/user/501/ccW4wdeR.s:379    .text:00000162 decrementPause
/tmp/user/501/ccW4wdeR.s:496    .text:00000206 allTasksFinished
/tmp/user/501/ccW4wdeR.s:581    .text:00000268 startRRScheduler
/tmp/user/501/ccW4wdeR.s:722    .text:0000033e nextScheduleItem
/tmp/user/501/ccW4wdeR.s:766    .text:00000374 incrementTime
/tmp/user/501/ccW4wdeR.s:874    .text:0000042c __vector_9

UNDEFINED SYMBOLS
__divmodhi4
__udivmodhi4
__do_clear_bss
