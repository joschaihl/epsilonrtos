   1               		.file	"kernel.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
 119               	.global	currentTime
 120               	.global	currentTime
 121               		.section .bss
 124               	currentTime:
 125 0000 0000 0000 		.skip 7,0
 125      0000 00
 126               		.text
 129               	.global	initTask
 131               	initTask:
   1:kernel.c      **** /**
   2:kernel.c      ****  *  @file kernel.c
   3:kernel.c      ****  *  @brief Betriebssystemkern
   4:kernel.c      ****  *  	   fÃ¼r epsilonRTOS
   5:kernel.c      ****  *  @author Joscha Ihl vision.josh@gmail.com
   6:kernel.c      ****  *  @version 0.1
   7:kernel.c      ****  *
   8:kernel.c      ****  *  Projekt     : EpsilonRTOS
   9:kernel.c      ****  *  @date 27.04.2015
  10:kernel.c      ****  *
  11:kernel.c      ****  *  This code is distributed under the GNU Public License
  12:kernel.c      ****  *  which can be found at http://www.gnu.org/licenses/gpl.txt
  13:kernel.c      ****  */
  14:kernel.c      **** 
  15:kernel.c      **** #include "kernel.h"
  16:kernel.c      **** 
  17:kernel.c      **** typedef struct {
  18:kernel.c      **** 	TASK **tasks;
  19:kernel.c      **** 	u08 current_task;
  20:kernel.c      **** 	u08 tasks_length;
  21:kernel.c      **** 	u16 stackPointer;
  22:kernel.c      **** } SCHEDULER;
  23:kernel.c      **** 
  24:kernel.c      **** typedef struct {
  25:kernel.c      ****    u08 hours;
  26:kernel.c      ****    u08 minutes;
  27:kernel.c      ****    u08 seconds;
  28:kernel.c      ****    u16 ms;
  29:kernel.c      ****    u16 us;
  30:kernel.c      **** } TIME;
  31:kernel.c      **** 
  32:kernel.c      **** TIME currentTime = {0, 0, 0, 0, 0};
  33:kernel.c      **** 
  34:kernel.c      **** SCHEDULER currentScheduler;
  35:kernel.c      **** 
  36:kernel.c      **** 
  37:kernel.c      **** void initTask(TASK *task)
  38:kernel.c      **** {
 132               	tTask:
 134               	.LM0:
 135 0000 DF93      	.LFBB1:
 136 0002 CF93      		push r29
 137 0004 00D0      		push r28
 138 0006 00D0      		rcall .
 139 0008 0F92      		rcall .
 140 000a CDB7      		push __tmp_reg__
 141 000c DEB7      		in r28,__SP_L__
 142               		in r29,__SP_H__
 143               	/* prologue: function */
 144 000e 9D83      	/* frame size = 5 */
 145 0010 8C83      		std Y+5,r25
  39:kernel.c      ****    u08 i, pc_high, pc_low;
  40:kernel.c      **** 	
  41:kernel.c      **** 	if(task->taskState == TASK_UNINITIALIZED)
 146               	e = 5 */
 147               		std Y+5,r25
 148 0012 EC81      		std Y+4,r24
 150 0016 8585      	.LM1:
 151 0018 8823      		ldd r30,Y+4
 152 001a 01F0      		ldd r31,Y+5
 153 001c 00C0      		ldd r24,Z+13
  42:kernel.c      **** 	{
  43:kernel.c      **** 		 // Set Stack Address
  44:kernel.c      ****        for(i = 0; i < (task->stackSize -2); i++)
 154               	4
 155               		ldd r31,Y+5
 156 001e 1B82      		ldd r24,Z+13
 157 0020 00C0      		tst r24
 158               		breq .+2
  45:kernel.c      ****        {
  46:kernel.c      ****           task->stack[i] = 0;
 159               		ldd r24,Z+13
 160               		tst r24
 161 0022 EC81      		breq .+2
 162 0024 FD81      		rjmp .L5
 164 0028 3581      	.LM2:
 165 002a 8B81      		std Y+3,__zero_reg__
 166 002c 882F      		rjmp .L3
 167 002e 90E0      	.L4:
 169 0032 E80F      	.LM3:
 170 0034 F91F      		ldd r30,Y+4
 171 0036 1082      		ldd r31,Y+5
 172               		ldd r18,Z+4
 173               		ldd r19,Z+5
 174 0038 8B81      		ldd r24,Y+3
 175 003a 8F5F      		mov r24,r24
 176 003c 8B83      		ldi r25,lo8(0)
 177               		movw r30,r18
 178 003e 8B81      		add r30,r24
 179 0040 282F      		adc r31,r25
 180 0042 30E0      		st Z,__zero_reg__
 182 0046 FD81      	.LM4:
 183 0048 8085      		ldd r24,Y+3
 184 004a 882F      		subi r24,lo8(-(1))
 185 004c 90E0      		std Y+3,r24
 186 004e 0297      	.L3:
 187 0050 2817      		ldd r24,Y+3
 188 0052 3907      		mov r18,r24
 189 0054 04F0      		ldi r19,lo8(0)
  47:kernel.c      ****        }
  48:kernel.c      ****        pc_high = (task->programmCounter >> 8);
 190               	o8(0)
 191               		ldd r30,Y+4
 192 0056 EC81      		ldd r31,Y+5
 193 0058 FD81      		ldd r24,Z+8
 194 005a 8281      		mov r24,r24
 195 005c 9381      		ldi r25,lo8(0)
 196 005e 892F      		sbiw r24,2
 197 0060 9927      		cp r18,r24
 198 0062 8A83      		cpc r19,r25
  49:kernel.c      ****        pc_low =  0xff & task->programmCounter;
 199               	,2
 200               		cp r18,r24
 201 0064 EC81      		cpc r19,r25
 202 0066 FD81      		brlt .L4
 204 006a 9381      	.LM5:
 205 006c 8983      		ldd r30,Y+4
  50:kernel.c      ****        i++;
 206               	LM5-.LFBB1
 207               	.LM5:
 208 006e 8B81      		ldd r30,Y+4
 209 0070 8F5F      		ldd r31,Y+5
 210 0072 8B83      		ldd r24,Z+2
  51:kernel.c      ****        task->stack[i] = pc_high;
 211               	0,Y+4
 212               		ldd r31,Y+5
 213 0074 EC81      		ldd r24,Z+2
 214 0076 FD81      		ldd r25,Z+3
 215 0078 2481      		mov r24,r25
 216 007a 3581      		clr r25
 217 007c 8B81      		std Y+2,r24
 219 0080 90E0      	.LM6:
 220 0082 F901      		ldd r30,Y+4
 221 0084 E80F      		ldd r31,Y+5
 222 0086 F91F      		ldd r24,Z+2
 223 0088 8A81      		ldd r25,Z+3
 224 008a 8083      		std Y+1,r24
  52:kernel.c      ****        i++;
 225               	 r25,Z+3
 226               		std Y+1,r24
 228 008e 8F5F      	.LM7:
 229 0090 8B83      		ldd r24,Y+3
  53:kernel.c      ****        task->stack[i] = pc_low;
 230               	LM7-.LFBB1
 231               	.LM7:
 232 0092 EC81      		ldd r24,Y+3
 233 0094 FD81      		subi r24,lo8(-(1))
 234 0096 2481      		std Y+3,r24
 236 009a 8B81      	.LM8:
 237 009c 882F      		ldd r30,Y+4
 238 009e 90E0      		ldd r31,Y+5
 239 00a0 F901      		ldd r18,Z+4
 240 00a2 E80F      		ldd r19,Z+5
 241 00a4 F91F      		ldd r24,Y+3
 242 00a6 8981      		mov r24,r24
 243 00a8 8083      		ldi r25,lo8(0)
  54:kernel.c      **** 		 // Set Task Ready
  55:kernel.c      **** 		 task->taskState = TASK_RUNNING;		
 244               	4,r24
 245               		ldi r25,lo8(0)
 246 00aa EC81      		movw r30,r18
 247 00ac FD81      		add r30,r24
 248 00ae 81E0      		adc r31,r25
 249 00b0 8587      		ldd r24,Y+2
 250               		st Z,r24
  56:kernel.c      **** 	}
  57:kernel.c      **** }
 253               	.LM9:
 254 00b2 0F90      		ldd r24,Y+3
 255 00b4 0F90      		subi r24,lo8(-(1))
 256 00b6 0F90      		std Y+3,r24
 258 00ba 0F90      	.LM10:
 259 00bc CF91      		ldd r30,Y+4
 260 00be DF91      		ldd r31,Y+5
 261 00c0 0895      		ldd r18,Z+4
 262               		ldd r19,Z+5
 263               		ldd r24,Y+3
 264               		mov r24,r24
 265               		ldi r25,lo8(0)
 266               		movw r30,r18
 267               		add r30,r24
 268               		adc r31,r25
 269               		ldd r24,Y+1
 270               		st Z,r24
 272               	.LM11:
 273               		ldd r30,Y+4
  58:kernel.c      **** 
  59:kernel.c      **** void sleep(u32 pause_us)
  60:kernel.c      **** {
 274               	ldd r30,Y+4
 275               		ldd r31,Y+5
 276               		ldi r24,lo8(1)
 277 00c2 DF93      		std Z+13,r24
 278 00c4 CF93      	.L5:
 279 00c6 CDB7      	/* epilogue start */
 281 00ca 2797      	.LM12:
 282 00cc 0FB6      		pop __tmp_reg__
 283 00ce F894      		pop __tmp_reg__
 284 00d0 DEBF      		pop __tmp_reg__
 285 00d2 0FBE      		pop __tmp_reg__
 286 00d4 CDBF      		pop __tmp_reg__
 287               		pop r28
 288               		pop r29
 289 00d6 6C83      		ret
  61:kernel.c      **** 	TASK *task;
  62:kernel.c      **** 	BOOL pause = 0;
 293               	,0,0,2
  63:kernel.c      **** 	task = currentScheduler.tasks[currentScheduler.current_task];
 296               	n	192,0,0,.LFBB1-.LFBB1
 298 00e0 2091 0000 	.Lscope1:
 301 00ec 882F      	.global	sleep
 303 00f0 880F      	sleep:
 305 00f4 F901      	.LM13:
 306 00f6 E80F      	.LFBB2:
 307 00f8 F91F      		push r29
 308 00fa 8081      		push r28
 309 00fc 9181      		in r28,__SP_L__
 310 00fe 9B83      		in r29,__SP_H__
 311 0100 8A83      		sbiw r28,7
  64:kernel.c      **** 	//if(task->taskState == TASK_RUNNING)
  65:kernel.c      **** 	//{
  66:kernel.c      **** 	  // cli();
  67:kernel.c      **** 		task->pause_us = pause_us;
 312               	sbiw r28,7
 313               		in __tmp_reg__,__SREG__
 314 0102 EA81      		cli
 315 0104 FB81      		out __SP_H__,r29
 316 0106 8C81      		out __SREG__,__tmp_reg__
 317 0108 9D81      		out __SP_L__,r28
 318 010a AE81      	/* prologue: function */
 319 010c BF81      	/* frame size = 7 */
 320 010e 8187      		std Y+4,r22
 321 0110 9287      		std Y+5,r23
 322 0112 A387      		std Y+6,r24
 323 0114 B487      		std Y+7,r25
  68:kernel.c      **** 		task->taskState = TASK_PAUSE;
 324               	,r24
 325               		std Y+7,r25
 327 0118 FB81      	.LM14:
 328 011a 82E0      		std Y+1,__zero_reg__
 330               	.LM15:
  69:kernel.c      **** 	//	sei();
  70:kernel.c      **** 		
  71:kernel.c      **** 		do
  72:kernel.c      **** 		{
  73:kernel.c      **** 			pause = (currentScheduler.tasks[currentScheduler.current_task]->taskState == TASK_PAUSE);
 331               	,0,63,.LM15-.LFBB2
 332               	.LM15:
 333 011e 2091 0000 		lds r18,currentScheduler
 334 0122 3091 0000 		lds r19,(currentScheduler)+1
 335 0126 8091 0000 		lds r24,currentScheduler+2
 336 012a 882F      		mov r24,r24
 337 012c 90E0      		ldi r25,lo8(0)
 338 012e 880F      		lsl r24
 339 0130 991F      		rol r25
 340 0132 F901      		movw r30,r18
 341 0134 E80F      		add r30,r24
 342 0136 F91F      		adc r31,r25
 343 0138 0190      		ld r24,Z
 344 013a F081      		ldd r25,Z+1
 345 013c E02D      		std Y+3,r25
 346 013e 8585      		std Y+2,r24
 348 0142 8230      	.LM16:
 349 0144 01F4      		ldd r30,Y+2
 350 0146 81E0      		ldd r31,Y+3
 351 0148 8983      		ldd r24,Y+4
 352               		ldd r25,Y+5
  74:kernel.c      **** 		} while(pause);
 353               		ldd r25,Y+5
 354               		ldd r26,Y+6
 355 014a 8981      		ldd r27,Y+7
 356 014c 8823      		std Z+9,r24
 357 014e 01F4      		std Z+10,r25
 358               		std Z+11,r26
  75:kernel.c      **** 	//}
  76:kernel.c      **** }
 359               	std Z+10,r25
 360               		std Z+11,r26
 361 0150 2796      		std Z+12,r27
 363 0154 F894      	.LM17:
 364 0156 DEBF      		ldd r30,Y+2
 365 0158 0FBE      		ldd r31,Y+3
 366 015a CDBF      		ldi r24,lo8(2)
 367 015c CF91      		std Z+13,r24
 368 015e DF91      	.L8:
 370               	.LM18:
 371               		lds r18,currentScheduler
 372               		lds r19,(currentScheduler)+1
 373               		lds r24,currentScheduler+2
 374               		mov r24,r24
 375               		ldi r25,lo8(0)
 376               		lsl r24
 377               		rol r25
 378               		movw r30,r18
 379               		add r30,r24
  77:kernel.c      **** 
  78:kernel.c      **** void decrementPause(void)
  79:kernel.c      **** {
 380               	dd r30,r24
 381               		adc r31,r25
 382               		ld __tmp_reg__,Z+
 383 0162 DF93      		ld r31,Z
 384 0164 CF93      		mov r30,__tmp_reg__
 385 0166 00D0      		ldd r24,Z+13
 386 0168 0F92      		std Y+1,__zero_reg__
 387 016a CDB7      		cpi r24,lo8(2)
 388 016c DEB7      		brne .L7
 389               		ldi r24,lo8(1)
 390               		std Y+1,r24
  80:kernel.c      ****    u08 i;
  81:kernel.c      ****    TASK *task;
  82:kernel.c      **** 	for(i = 0;	i < currentScheduler.tasks_length; i++)
 391               	,lo8(1)
 392               		std Y+1,r24
 393 016e 1B82      	.L7:
 395               	.LM19:
  83:kernel.c      **** 	{
  84:kernel.c      **** 		task = currentScheduler.tasks[i];
 396               	4,.LM19-.LFBB2
 397               	.LM19:
 398 0172 2091 0000 		ldd r24,Y+1
 399 0176 3091 0000 		tst r24
 400 017a 8B81      		brne .L8
 401 017c 882F      	/* epilogue start */
 403 0180 880F      	.LM20:
 404 0182 991F      		adiw r28,7
 405 0184 F901      		in __tmp_reg__,__SREG__
 406 0186 E80F      		cli
 407 0188 F91F      		out __SP_H__,r29
 408 018a 8081      		out __SREG__,__tmp_reg__
 409 018c 9181      		out __SP_L__,r28
 410 018e 9A83      		pop r28
 411 0190 8983      		pop r29
  85:kernel.c      **** 		if(task->taskState == TASK_PAUSE)
 412               	
 413               		pop r29
 414 0192 E981      		ret
  86:kernel.c      **** 		{
  87:kernel.c      ****       	if(task->pause_us <= TIMER_DELAY_US)
 419               	,0,0,.LFBB2-.LFBB2
 421 019c E981      	.Lscope2:
 423 01a0 8185      	.global	decrementPause
 425 01a4 A385      	decrementPause:
 427 01a8 8B3F      	.LM21:
 428 01aa 9105      	.LFBB3:
 429 01ac A105      		push r29
 430 01ae B105      		push r28
 431 01b0 00F4      		rcall .
  88:kernel.c      ****       	{
  89:kernel.c      ****       		task->pause_us = 0;
 432               	r28
 433               		rcall .
 434 01b2 E981      		push __tmp_reg__
 435 01b4 FA81      		in r28,__SP_L__
 436 01b6 1186      		in r29,__SP_H__
 437 01b8 1286      	/* prologue: function */
 438 01ba 1386      	/* frame size = 3 */
  90:kernel.c      ****       		task->taskState = TASK_RUNNING;
 440               	abn	68,0,82,.LM22-.LFBB3
 441               	.LM22:
 442 01be E981      		std Y+3,__zero_reg__
 443 01c0 FA81      		rjmp .L11
 444 01c2 81E0      	.L14:
 446 01c6 00C0      	.LM23:
 447               		lds r18,currentScheduler
  91:kernel.c      ****       	}
  92:kernel.c      ****       	else
  93:kernel.c      ****       	{
  94:kernel.c      ****       		task->pause_us -= TIMER_DELAY_US;
 448               		lds r18,currentScheduler
 449               		lds r19,(currentScheduler)+1
 450 01c8 E981      		ldd r24,Y+3
 451 01ca FA81      		mov r24,r24
 452 01cc 8185      		ldi r25,lo8(0)
 453 01ce 9285      		lsl r24
 454 01d0 A385      		rol r25
 455 01d2 B485      		movw r30,r18
 456 01d4 8A5F      		add r30,r24
 457 01d6 9040      		adc r31,r25
 458 01d8 A040      		ld r24,Z
 459 01da B040      		ldd r25,Z+1
 460 01dc E981      		std Y+2,r25
 461 01de FA81      		std Y+1,r24
 463 01e2 9287      	.LM24:
 464 01e4 A387      		ldd r30,Y+1
 465 01e6 B487      		ldd r31,Y+2
 466               		ldd r24,Z+13
 467               		cpi r24,lo8(2)
 468               		brne .L12
 470 01ea 8F5F      	.LM25:
 471 01ec 8B83      		ldd r30,Y+1
 472               		ldd r31,Y+2
 473 01ee 9091 0000 		ldd r24,Z+9
 474 01f2 8B81      		ldd r25,Z+10
 475 01f4 8917      		ldd r26,Z+11
 476 01f6 00F4      		ldd r27,Z+12
 477 01f8 00C0      		cpi r24,lo8(251)
 478               		cpc r25,__zero_reg__
  95:kernel.c      ****       	}
  96:kernel.c      ****       }
  97:kernel.c      **** 	}
  98:kernel.c      **** }
 479               	_
 480               		cpc r26,__zero_reg__
 481 01fa 0F90      		cpc r27,__zero_reg__
 482 01fc 0F90      		brsh .L13
 484 0200 CF91      	.LM26:
 485 0202 DF91      		ldd r30,Y+1
 486 0204 0895      		ldd r31,Y+2
 487               		std Z+9,__zero_reg__
 488               		std Z+10,__zero_reg__
 489               		std Z+11,__zero_reg__
 490               		std Z+12,__zero_reg__
 492               	.LM27:
 493               		ldd r30,Y+1
 494               		ldd r31,Y+2
 495               		ldi r24,lo8(1)
 496               		std Z+13,r24
  99:kernel.c      **** 
 100:kernel.c      **** u08 allTasksFinished(void)
 101:kernel.c      **** {
 497               	std Z+13,r24
 498               		rjmp .L12
 499               	.L13:
 501 0208 CF93      	.LM28:
 502 020a 00D0      		ldd r30,Y+1
 503 020c 00D0      		ldd r31,Y+2
 504 020e CDB7      		ldd r24,Z+9
 505 0210 DEB7      		ldd r25,Z+10
 506               		ldd r26,Z+11
 507               		ldd r27,Z+12
 102:kernel.c      ****    u08 i;
 103:kernel.c      ****    TASK *task;
 104:kernel.c      ****    u08 result = 1;
 508               	r26,Z+11
 509               		ldd r27,Z+12
 510 0212 81E0      		subi r24,lo8(-(-250))
 511 0214 8983      		sbci r25,hi8(-(-250))
 105:kernel.c      **** 	for(i = 0;	i < currentScheduler.tasks_length; i++)
 512               	250))
 513               		sbci r25,hi8(-(-250))
 514 0216 1C82      		sbci r26,hlo8(-(-250))
 515 0218 00C0      		sbci r27,hhi8(-(-250))
 516               		ldd r30,Y+1
 106:kernel.c      **** 	{
 107:kernel.c      **** 		task = currentScheduler.tasks[i];
 517               	hhi8(-(-250))
 518               		ldd r30,Y+1
 519 021a 2091 0000 		ldd r31,Y+2
 520 021e 3091 0000 		std Z+9,r24
 521 0222 8C81      		std Z+10,r25
 522 0224 882F      		std Z+11,r26
 523 0226 90E0      		std Z+12,r27
 524 0228 880F      	.L12:
 526 022c F901      	.LM29:
 527 022e E80F      		ldd r24,Y+3
 528 0230 F91F      		subi r24,lo8(-(1))
 529 0232 8081      		std Y+3,r24
 530 0234 9181      	.L11:
 531 0236 9B83      		lds r25,currentScheduler+3
 532 0238 8A83      		ldd r24,Y+3
 108:kernel.c      **** 		if(task->taskState != TASK_FINISHED)
 533               	3
 534               		ldd r24,Y+3
 535 023a EA81      		cp r24,r25
 536 023c FB81      		brsh .+2
 537 023e 8585      		rjmp .L14
 538 0240 8330      	/* epilogue start */
 109:kernel.c      **** 		{
 110:kernel.c      **** 			result = 0;
 540               	,98,.LM30-.LFBB3
 541               	.LM30:
 542 0244 1982      		pop __tmp_reg__
 543 0246 00C0      		pop __tmp_reg__
 544               		pop __tmp_reg__
 545               		pop r28
 546               		pop r29
 547 0248 8C81      		ret
 553 0254 8917      	.Lscope3:
 555               	.global	allTasksFinished
 111:kernel.c      **** 			break;
 112:kernel.c      **** 		}
 113:kernel.c      **** 	}
 114:kernel.c      **** 	return (result);
 556               	sFinished
 558 0258 8981      	allTasksFinished:
 115:kernel.c      **** }
 560               	tabn	68,0,101,.LM31-.LFBB4
 561               	.LM31:
 562 025a 0F90      	.LFBB4:
 563 025c 0F90      		push r29
 564 025e 0F90      		push r28
 565 0260 0F90      		rcall .
 566 0262 CF91      		rcall .
 567 0264 DF91      		in r28,__SP_L__
 568 0266 0895      		in r29,__SP_H__
 569               	/* prologue: function */
 570               	/* frame size = 4 */
 572               	.LM32:
 573               		ldi r24,lo8(1)
 574               		std Y+1,r24
 576               	.LM33:
 577               		std Y+4,__zero_reg__
 578               		rjmp .L17
 579               	.L20:
 581               	.LM34:
 116:kernel.c      **** 
 117:kernel.c      **** void startRRScheduler(TASK **tasks, u08 tasks_length)
 118:kernel.c      **** {
 582               	BB4
 583               	.LM34:
 584               		lds r18,currentScheduler
 585 0268 DF93      		lds r19,(currentScheduler)+1
 586 026a CF93      		ldd r24,Y+4
 587 026c 00D0      		mov r24,r24
 588 026e 00D0      		ldi r25,lo8(0)
 589 0270 0F92      		lsl r24
 590 0272 CDB7      		rol r25
 591 0274 DEB7      		movw r30,r18
 592               		add r30,r24
 593               		adc r31,r25
 594 0276 9C83      		ld r24,Z
 595 0278 8B83      		ldd r25,Z+1
 596 027a 6D83      		std Y+3,r25
 119:kernel.c      **** 	currentScheduler.stackPointer = SP + 7;
 597               	5,Z+1
 598               		std Y+3,r25
 599 027c EDE5      		std Y+2,r24
 601 0280 8081      	.LM35:
 602 0282 9181      		ldd r30,Y+2
 603 0284 0796      		ldd r31,Y+3
 604 0286 9093 0000 		ldd r24,Z+13
 605 028a 8093 0000 		cpi r24,lo8(3)
 120:kernel.c      ****    TASK *task;
 121:kernel.c      **** 	currentScheduler.current_task = 0;
 606               	24,Z+13
 607               		cpi r24,lo8(3)
 608 028e 1092 0000 		breq .L18
 122:kernel.c      **** 	currentScheduler.tasks = tasks;
 609               	3
 610               		cpi r24,lo8(3)
 611 0292 8B81      		breq .L18
 613 0296 9093 0000 	.LM36:
 614 029a 8093 0000 		std Y+1,__zero_reg__
 123:kernel.c      **** 	currentScheduler.tasks_length = tasks_length;
 615               	M36:
 616               		std Y+1,__zero_reg__
 617 029e 8D81      		rjmp .L19
 618 02a0 8093 0000 	.L18:
 124:kernel.c      **** 
 125:kernel.c      **** 	// Inititalize Tasks
 126:kernel.c      **** 	for(currentScheduler.current_task = 0;
 619               	ero_reg__
 620               		rjmp .L19
 621 02a4 1092 0000 	.L18:
 623               	.LM37:
 127:kernel.c      **** 			currentScheduler.current_task < currentScheduler.tasks_length;
 128:kernel.c      **** 			currentScheduler.current_task++)
 129:kernel.c      **** 	{
 130:kernel.c      **** 		task = currentScheduler.tasks[currentScheduler.current_task];
 624               	,105,.LM37-.LFBB4
 625               	.LM37:
 626 02aa 2091 0000 		ldd r24,Y+4
 627 02ae 3091 0000 		subi r24,lo8(-(1))
 628 02b2 8091 0000 		std Y+4,r24
 629 02b6 882F      	.L17:
 630 02b8 90E0      		lds r25,currentScheduler+3
 631 02ba 880F      		ldd r24,Y+4
 632 02bc 991F      		cp r24,r25
 633 02be F901      		brlo .L20
 634 02c0 E80F      	.L19:
 636 02c4 8081      	.LM38:
 637 02c6 9181      		ldd r24,Y+1
 638 02c8 9A83      	/* epilogue start */
 131:kernel.c      ****       initTask(task);
 640               	LM39-.LFBB4
 641               	.LM39:
 642 02cc 8981      		pop __tmp_reg__
 643 02ce 9A81      		pop __tmp_reg__
 644 02d0 0E94 0000 		pop __tmp_reg__
 645               		pop __tmp_reg__
 646               		pop r28
 647 02d4 8091 0000 		pop r29
 648 02d8 8F5F      		ret
 655 02e6 9817      	.Lscope4:
 132:kernel.c      **** 	}
 133:kernel.c      **** 	currentScheduler.current_task = 0;
 657               	ler
 134:kernel.c      ****    task = currentScheduler.tasks[0];
 660               	length:p(3,1)",160,0,0,5
 661               	.global	startRRScheduler
 663 02f2 F091 0000 	startRRScheduler:
 665 02f8 9181      	.LM40:
 666 02fa 9A83      	.LFBB5:
 667 02fc 8983      		push r29
 135:kernel.c      **** 	initTimer();
 668               	:
 669               	.LFBB5:
 670 02fe E3E5      		push r29
 671 0300 F0E0      		push r28
 672 0302 82E0      		rcall .
 673 0304 8083      		rcall .
 674 0306 E9E5      		push __tmp_reg__
 675 0308 F0E0      		in r28,__SP_L__
 676 030a 81E0      		in r29,__SP_H__
 677 030c 8083      	/* prologue: function */
 678               	/* frame size = 5 */
 679               		std Y+4,r25
 680 030e 7894      		std Y+3,r24
 681               		std Y+5,r22
 136:kernel.c      **** 
 137:kernel.c      **** 	set_stackpointer(task->stackPointer + WORKING_REGISTERS);
 682               	24
 683               		std Y+5,r22
 685 0310 ADE5      	.LM41:
 686 0312 B0E0      		ldi r30,lo8(93)
 687 0314 E981      		ldi r31,hi8(93)
 688 0316 FA81      		ld r24,Z
 689 0318 8681      		ldd r25,Z+1
 690 031a 9781      		adiw r24,7
 691 031c 8096      		sts (currentScheduler+4)+1,r25
 692 031e 1196      		sts currentScheduler+4,r24
 694 0322 8E93      	.LM42:
 138:kernel.c      **** 	task->taskFunction();
 695               	LFBB5
 696               	.LM42:
 697 0324 E981      		sts currentScheduler+2,__zero_reg__
 699 0328 0190      	.LM43:
 700 032a F081      		ldd r24,Y+3
 701 032c E02D      		ldd r25,Y+4
 702 032e 0995      		sts (currentScheduler)+1,r25
 703               		sts currentScheduler,r24
 139:kernel.c      **** }
 704               	rentScheduler,r24
 706 0330 0F90      	.LM44:
 707 0332 0F90      		ldd r24,Y+5
 708 0334 0F90      		sts currentScheduler+3,r24
 710 0338 0F90      	.LM45:
 711 033a CF91      		sts currentScheduler+2,__zero_reg__
 712 033c DF91      		rjmp .L23
 713 033e 0895      	.L24:
 715               	.LM46:
 716               		lds r18,currentScheduler
 717               		lds r19,(currentScheduler)+1
 718               		lds r24,currentScheduler+2
 719               		mov r24,r24
 720               		ldi r25,lo8(0)
 721               		lsl r24
 722               		rol r25
 140:kernel.c      **** 
 141:kernel.c      **** void nextScheduleItem(void)
 142:kernel.c      **** {
 723               	4
 724               		rol r25
 725               		movw r30,r18
 726 0340 DF93      		add r30,r24
 727 0342 CF93      		adc r31,r25
 728 0344 CDB7      		ld r24,Z
 729 0346 DEB7      		ldd r25,Z+1
 730               		std Y+2,r25
 731               		std Y+1,r24
 143:kernel.c      **** 	if (currentScheduler.current_task < (currentScheduler.tasks_length -1))
 732               	+2,r25
 733               		std Y+1,r24
 735 034c 282F      	.LM47:
 736 034e 30E0      		ldd r24,Y+1
 737 0350 8091 0000 		ldd r25,Y+2
 738 0354 882F      		call initTask
 740 0358 0197      	.LM48:
 741 035a 2817      		lds r24,currentScheduler+2
 742 035c 3907      		subi r24,lo8(-(1))
 743 035e 04F4      		sts currentScheduler+2,r24
 144:kernel.c      **** 	{
 145:kernel.c      **** 		currentScheduler.current_task++;
 744               	cheduler+2,r24
 745               	.L23:
 747 0364 8F5F      	.LM49:
 748 0366 8093 0000 		lds r25,currentScheduler+2
 749 036a 00C0      		lds r24,currentScheduler+3
 750               		cp r25,r24
 146:kernel.c      **** 	}
 147:kernel.c      **** 	else
 148:kernel.c      **** 	{
 149:kernel.c      **** 		currentScheduler.current_task = 0;
 751               	heduler+3
 752               		cp r25,r24
 753 036c 1092 0000 		brlo .L24
 755               	.LM50:
 150:kernel.c      **** 	}
 151:kernel.c      **** }
 756               	0,133,.LM50-.LFBB5
 757               	.LM50:
 758 0370 CF91      		sts currentScheduler+2,__zero_reg__
 760 0374 0895      	.LM51:
 761               		lds r30,currentScheduler
 762               		lds r31,(currentScheduler)+1
 763               		ld r24,Z
 764               		ldd r25,Z+1
 765               		std Y+2,r25
 766               		std Y+1,r24
 152:kernel.c      **** 
 153:kernel.c      **** void incrementTime(void)
 154:kernel.c      **** {
 767               	+2,r25
 768               		std Y+1,r24
 770 0376 DF93      	.LM52:
 771 0378 CF93      		ldi r30,lo8(83)
 772 037a CDB7      		ldi r31,hi8(83)
 773 037c DEB7      		ldi r24,lo8(2)
 774               		st Z,r24
 775               		ldi r30,lo8(89)
 155:kernel.c      ****    if((currentTime.us+TIMER_DELAY_US)==1000)
 776               	st Z,r24
 777               		ldi r30,lo8(89)
 778 037e 8091 0000 		ldi r31,hi8(89)
 779 0382 9091 0000 		ldi r24,lo8(1)
 780 0386 22E0      		st Z,r24
 781 0388 8E3E      	/* #APP */
 782 038a 9207      	 ;  135 "kernel.c" 1
 783 038c 01F0      		sei
 784 038e 00C0      	 ;  0 "" 2
 156:kernel.c      ****    {
 157:kernel.c      ****    	if((currentTime.ms+1)==1000)
 785               	rnel.c" 1
 786               		sei
 787 0390 8091 0000 	 ;  0 "" 2
 789 0398 23E0      	.LM53:
 790 039a 873E      	/* #NOAPP */
 791 039c 9207      		ldi r26,lo8(93)
 792 039e 01F4      		ldi r27,hi8(93)
 158:kernel.c      ****    	{
 159:kernel.c      ****    	   if((currentTime.seconds+1)==60)
 793               	6,lo8(93)
 794               		ldi r27,hi8(93)
 795 03a0 8091 0000 		ldd r30,Y+1
 796 03a4 8B33      		ldd r31,Y+2
 797 03a6 01F4      		ldd r24,Z+6
 160:kernel.c      ****    	   {
 161:kernel.c      ****    	   	if((currentTime.minutes+1)==60)
 798               		ldd r31,Y+2
 799               		ldd r24,Z+6
 800 03a8 8091 0000 		ldd r25,Z+7
 801 03ac 8B33      		adiw r24,32
 802 03ae 01F4      		adiw r26,1
 162:kernel.c      ****    	   	{
 163:kernel.c      ****    	   		currentTime.hours = (currentTime.hours+1) % 24;
 803               		adiw r24,32
 804               		adiw r26,1
 805 03b0 8091 0000 		st X,r25
 806 03b4 882F      		st -X,r24
 808 03b8 0196      	.LM54:
 809 03ba 28E1      		ldd r30,Y+1
 810 03bc 30E0      		ldd r31,Y+2
 811 03be B901      		ld __tmp_reg__,Z+
 812 03c0 0E94 0000 		ld r31,Z
 813 03c4 8093 0000 		mov r30,__tmp_reg__
 814               		icall
 164:kernel.c      ****    	   	}
 165:kernel.c      ****    	   	currentTime.minutes = (currentTime.minutes+1) % 60;
 815               	mp_reg__
 816               		icall
 817 03c8 8091 0000 	/* epilogue start */
 819 03ce 90E0      	.LM55:
 820 03d0 0196      		pop __tmp_reg__
 821 03d2 2CE3      		pop __tmp_reg__
 822 03d4 30E0      		pop __tmp_reg__
 823 03d6 B901      		pop __tmp_reg__
 824 03d8 0E94 0000 		pop __tmp_reg__
 825 03dc 8093 0000 		pop r28
 826               		pop r29
 166:kernel.c      ****    	   }
 167:kernel.c      ****    	   currentTime.seconds = (currentTime.seconds+1) % 60;
 827               	r28
 828               		pop r29
 829 03e0 8091 0000 		ret
 834 03ec 30E0      	.Lscope5:
 836 03f0 0E94 0000 	.global	nextScheduleItem
 838               	nextScheduleItem:
 168:kernel.c      ****    	}
 169:kernel.c      ****    	currentTime.ms = (currentTime.ms+1) % 1000;
 839               	eduleItem:
 841 03f8 8091 0000 	.LM56:
 842 03fc 9091 0000 	.LFBB6:
 843 0400 0196      		push r29
 844 0402 28EE      		push r28
 845 0404 33E0      		in r28,__SP_L__
 846 0406 B901      		in r29,__SP_H__
 847 0408 0E94 0000 	/* prologue: function */
 848 040c 9093 0000 	/* frame size = 0 */
 850               	.LM57:
 170:kernel.c      ****    }
 171:kernel.c      ****    currentTime.us = (currentTime.us+TIMER_DELAY_US) % 1000;
 851               	57-.LFBB6
 852               	.LM57:
 853 0414 8091 0000 		lds r24,currentScheduler+2
 854 0418 9091 0000 		mov r18,r24
 855 041c 8650      		ldi r19,lo8(0)
 856 041e 9F4F      		lds r24,currentScheduler+3
 857 0420 28EE      		mov r24,r24
 858 0422 33E0      		ldi r25,lo8(0)
 859 0424 B901      		sbiw r24,1
 860 0426 0E94 0000 		cp r18,r24
 861 042a 9093 0000 		cpc r19,r25
 862 042e 8093 0000 		brge .L27
 172:kernel.c      **** }
 864               	45,.LM58-.LFBB6
 865               	.LM58:
 866 0432 CF91      		lds r24,currentScheduler+2
 867 0434 DF91      		subi r24,lo8(-(1))
 868 0436 0895      		sts currentScheduler+2,r24
 869               		rjmp .L29
 870               	.L27:
 872               	.LM59:
 873               		sts currentScheduler+2,__zero_reg__
 874               	.L29:
 173:kernel.c      **** 
 174:kernel.c      **** SCHEDULER_TIMER()
 175:kernel.c      **** {
 875               	ero_reg__
 876               	.L29:
 877               	/* epilogue start */
 879               	.LM60:
 176:kernel.c      **** 	// Testen ob nicht alle Tasks beendet worden sind
 177:kernel.c      **** 	// falls ja:
 178:kernel.c      **** 	//if(!allTasksFinished())
 179:kernel.c      **** 	//{
 180:kernel.c      ****    	save_registers();
 880               	1,.LM60-.LFBB6
 881               	.LM60:
 882               		pop r28
 883               		pop r29
 884 0438 0F92      		ret
 886               	.Lscope6:
 888               	.global	incrementTime
 890 043c 2F92      	incrementTime:
 892               	.LM61:
 893 043e 3F92      	.LFBB7:
 894               		push r29
 895               		push r28
 896 0440 4F92      		in r28,__SP_L__
 897               		in r29,__SP_H__
 898               	/* prologue: function */
 899 0442 5F92      	/* frame size = 0 */
 901               	.LM62:
 902 0444 6F92      		lds r24,currentTime+5
 903               		lds r25,(currentTime+5)+1
 904               		ldi r18,hi8(750)
 905 0446 7F92      		cpi r24,lo8(750)
 906               		cpc r25,r18
 907               		breq .+2
 908 0448 8F92      		rjmp .L31
 910               	.LM63:
 911 044a 9F92      		lds r24,currentTime+3
 912               		lds r25,(currentTime+3)+1
 913               		ldi r18,hi8(999)
 914 044c AF92      		cpi r24,lo8(999)
 915               		cpc r25,r18
 916               		brne .L32
 918               	.LM64:
 919               		lds r24,currentTime+2
 920 0450 CF92      		cpi r24,lo8(59)
 921               		brne .L33
 923 0452 DF92      	.LM65:
 924               		lds r24,currentTime+1
 925               		cpi r24,lo8(59)
 926 0454 EF92      		brne .L34
 928               	.LM66:
 929 0456 FF92      		lds r24,currentTime
 930               		mov r24,r24
 931               		ldi r25,lo8(0)
 932 0458 0F93      		adiw r24,1
 933               		ldi r18,lo8(24)
 934               		ldi r19,hi8(24)
 935 045a 1F93      		movw r22,r18
 936               		call __divmodhi4
 937               		sts currentTime,r24
 938 045c 2F93      	.L34:
 940               	.LM67:
 941 045e 3F93      		lds r24,currentTime+1
 942               		mov r24,r24
 943               		ldi r25,lo8(0)
 944 0460 4F93      		adiw r24,1
 945               		ldi r18,lo8(60)
 946               		ldi r19,hi8(60)
 947 0462 5F93      		movw r22,r18
 948               		call __divmodhi4
 949               		sts currentTime+1,r24
 950 0464 6F93      	.L33:
 952               	.LM68:
 953 0466 7F93      		lds r24,currentTime+2
 954               		mov r24,r24
 955               		ldi r25,lo8(0)
 956 0468 8F93      		adiw r24,1
 957               		ldi r18,lo8(60)
 958               		ldi r19,hi8(60)
 959 046a 9F93      		movw r22,r18
 960               		call __divmodhi4
 961               		sts currentTime+2,r24
 962 046c AF93      	.L32:
 964               	.LM69:
 965 046e BF93      		lds r24,currentTime+3
 966               		lds r25,(currentTime+3)+1
 967               		adiw r24,1
 968 0470 CF93      		ldi r18,lo8(1000)
 969               		ldi r19,hi8(1000)
 970               		movw r22,r18
 971 0472 DF93      		call __udivmodhi4
 972               		sts (currentTime+3)+1,r25
 973               		sts currentTime+3,r24
 974 0474 EF93      	.L31:
 976               	.LM70:
 977 0476 FF93      		lds r24,currentTime+5
 978               		lds r25,(currentTime+5)+1
 181:kernel.c      **** 		TASK *task;
 182:kernel.c      **** 		task = currentScheduler.tasks[currentScheduler.current_task];
 979               	urrentTime+5)+1
 980               		subi r24,lo8(-(250))
 981               		sbci r25,hi8(-(250))
 982 0478 2091 0000 		ldi r18,lo8(1000)
 983 047c 3091 0000 		ldi r19,hi8(1000)
 984 0480 8091 0000 		movw r22,r18
 985 0484 882F      		call __udivmodhi4
 986 0486 90E0      		sts (currentTime+5)+1,r25
 987 0488 880F      		sts currentTime+5,r24
 988 048a 991F      	/* epilogue start */
 990 048e E80F      	.LM71:
 991 0490 F91F      		pop r28
 992 0492 8081      		pop r29
 993 0494 9181      		ret
 995 0498 8983      	.Lscope7:
 183:kernel.c      **** 
 184:kernel.c      **** 	// Stackpointer vom letzten task sichern
 185:kernel.c      **** 		task->stackPointer = get_stackpointer();
 996               	Lscope7:
 998 049a EDE5      	.global	__vector_11
 1000 049e 8081      	__vector_11:
 1002 04a2 E981      	.LM72:
 1003 04a4 FA81      	.LFBB8:
 1004 04a6 9783      	/* prologue: naked */
 1005 04a8 8683      	/* frame size = 2 */
 186:kernel.c      **** 		incrementTime();
 1006               	* frame size = 2 */
 1008 04aa 0E94 0000 	.LM73:
 187:kernel.c      **** 		decrementPause();
 1009               	n	68,0,180,.LM73-.LFBB8
 1010               	.LM73:
 1011 04ae 0E94 0000 	/* #APP */
 188:kernel.c      **** 
 189:kernel.c      **** 		if(allTasksFinished())
 1012               	.LM73-.LFBB8
 1013               	.LM73:
 1014 04b2 0E94 0000 	/* #APP */
 1015 04b6 8823      	 ;  180 "kernel.c" 1
 1016 04b8 01F0      		push    r0
 190:kernel.c      **** 		{
 191:kernel.c      **** 		 	set_stackpointer(currentScheduler.stackPointer);
 1017               	 180 "kernel.c" 1
 1018               		push    r0
 1019 04ba EDE5      	 ;  0 "" 2
 1020 04bc F0E0      	 ;  180 "kernel.c" 1
 1021 04be 8091 0000 		push    r1
 1022 04c2 9091 0000 	 ;  0 "" 2
 1023 04c6 9183      	 ;  180 "kernel.c" 1
 1024 04c8 8083      		push    r2
 192:kernel.c      **** 		 	disableTimer();
 1025               	 "kernel.c" 1
 1026               		push    r2
 1027 04ca E9E5      	 ;  0 "" 2
 1028 04cc F0E0      	 ;  180 "kernel.c" 1
 1029 04ce 1082      		push    r3
 193:kernel.c      **** 		 	return_interrupt();
 1030               	180 "kernel.c" 1
 1031               		push    r3
 1032               	 ;  0 "" 2
 1033               	 ;  180 "kernel.c" 1
 1034 04d0 1895      		push    r4
 1035               	 ;  0 "" 2
 1036               	 ;  180 "kernel.c" 1
 1037               		push    r5
 194:kernel.c      **** 		}
 195:kernel.c      **** 	
 196:kernel.c      **** 		nextScheduleItem();
 1038               	 "kernel.c" 1
 1039               		push    r5
 1040 04d2 0E94 0000 	 ;  0 "" 2
 197:kernel.c      ****   		task = currentScheduler.tasks[currentScheduler.current_task];
 1041               	el.c" 1
 1042               		push    r5
 1043 04d6 2091 0000 	 ;  0 "" 2
 1044 04da 3091 0000 	 ;  180 "kernel.c" 1
 1045 04de 8091 0000 		push    r6
 1046 04e2 882F      	 ;  0 "" 2
 1047 04e4 90E0      	 ;  180 "kernel.c" 1
 1048 04e6 880F      		push    r7
 1049 04e8 991F      	 ;  0 "" 2
 1050 04ea F901      	 ;  180 "kernel.c" 1
 1051 04ec E80F      		push    r8
 1052 04ee F91F      	 ;  0 "" 2
 1053 04f0 8081      	 ;  180 "kernel.c" 1
 1054 04f2 9181      		push    r9
 1055 04f4 9A83      	 ;  0 "" 2
 1056 04f6 8983      	 ;  180 "kernel.c" 1
 198:kernel.c      **** 		set_stackpointer(task->stackPointer);
 1057               	  180 "kernel.c" 1
 1058               		push    r10
 1059 04f8 ADE5      	 ;  0 "" 2
 1060 04fa B0E0      	 ;  180 "kernel.c" 1
 1061 04fc E981      		push    r11
 1062 04fe FA81      	 ;  0 "" 2
 1063 0500 8681      	 ;  180 "kernel.c" 1
 1064 0502 9781      		push    r12
 1065 0504 1196      	 ;  0 "" 2
 1066 0506 9C93      	 ;  180 "kernel.c" 1
 1067 0508 8E93      		push    r13
 199:kernel.c      **** 		load_registers();
 1068               	nel.c" 1
 1069               		push    r13
 1070               	 ;  0 "" 2
 1071               	 ;  180 "kernel.c" 1
 1072 050a FF91      		push    r14
 1073               	 ;  0 "" 2
 1074               	 ;  180 "kernel.c" 1
 1075 050c EF91      		push    r15
 1076               	 ;  0 "" 2
 1077               	 ;  180 "kernel.c" 1
 1078 050e DF91      		push    r16
 1079               	 ;  0 "" 2
 1080               	 ;  180 "kernel.c" 1
 1081 0510 CF91      		push    r17
 1082               	 ;  0 "" 2
 1083               	 ;  180 "kernel.c" 1
 1084 0512 BF91      		push    r18
 1085               	 ;  0 "" 2
 1086               	 ;  180 "kernel.c" 1
 1087 0514 AF91      		push    r19
 1088               	 ;  0 "" 2
 1089               	 ;  180 "kernel.c" 1
 1090 0516 9F91      		push    r20
 1091               	 ;  0 "" 2
 1092               	 ;  180 "kernel.c" 1
 1093 0518 8F91      		push    r21
 1094               	 ;  0 "" 2
 1095               	 ;  180 "kernel.c" 1
 1096 051a 7F91      		push    r22
 1097               	 ;  0 "" 2
 1098               	 ;  180 "kernel.c" 1
 1099 051c 6F91      		push    r23
 1100               	 ;  0 "" 2
 1101               	 ;  180 "kernel.c" 1
 1102 051e 5F91      		push    r24
 1103               	 ;  0 "" 2
 1104               	 ;  180 "kernel.c" 1
 1105 0520 4F91      		push    r25
 1106               	 ;  0 "" 2
 1107               	 ;  180 "kernel.c" 1
 1108 0522 3F91      		push    r26
 1109               	 ;  0 "" 2
 1110               	 ;  180 "kernel.c" 1
 1111 0524 2F91      		push    r27
 1112               	 ;  0 "" 2
 1113               	 ;  180 "kernel.c" 1
 1114 0526 1F91      		push    r28
 1115               	 ;  0 "" 2
 1116               	 ;  180 "kernel.c" 1
 1117 0528 0F91      		push    r29
 1118               	 ;  0 "" 2
 1119               	 ;  180 "kernel.c" 1
 1120 052a FF90      		push    r30
 1121               	 ;  0 "" 2
 1122               	 ;  180 "kernel.c" 1
 1123 052c EF90      		push    r31
 1124               	 ;  0 "" 2
 1126 052e DF90      	.LM74:
 1127               	/* #NOAPP */
 1128               		lds r18,currentScheduler
 1129 0530 CF90      		lds r19,(currentScheduler)+1
 1130               		lds r24,currentScheduler+2
 1131               		mov r24,r24
 1132 0532 BF90      		ldi r25,lo8(0)
 1133               		lsl r24
 1134               		rol r25
 1135 0534 AF90      		movw r30,r18
 1136               		add r30,r24
 1137               		adc r31,r25
 1138 0536 9F90      		ld r24,Z
 1139               		ldd r25,Z+1
 1140               		std Y+2,r25
 1141 0538 8F90      		std Y+1,r24
 1143               	.LM75:
 1144 053a 7F90      		ldi r30,lo8(93)
 1145               		ldi r31,hi8(93)
 1146               		ld r24,Z
 1147 053c 6F90      		ldd r25,Z+1
 1148               		ldd r30,Y+1
 1149               		ldd r31,Y+2
 1150 053e 5F90      		std Z+7,r25
 1151               		std Z+6,r24
 1153 0540 4F90      	.LM76:
 1154               		call incrementTime
 1156 0542 3F90      	.LM77:
 1157               		call decrementPause
 1159 0544 2F90      	.LM78:
 1160               		call allTasksFinished
 1161               		tst r24
 1162 0546 1F90      		breq .L37
 1164               	.LM79:
 1165 0548 0F90      		ldi r30,lo8(93)
 1166               		ldi r31,hi8(93)
 200:kernel.c      **** 	/*}
 201:kernel.c      **** 	else
 202:kernel.c      **** 	{ // Kein Task mehr da
 203:kernel.c      **** 	 	// Stackpointer setzen
 204:kernel.c      **** 		set_stackpointer(currentScheduler.stackPointer);
 205:kernel.c      **** 		// Timer deaktivieren
 206:kernel.c      **** 		disableTimer();
 207:kernel.c      **** 	}  */
 208:kernel.c      ****    return_interrupt();
 1167               		lds r24,currentScheduler+4
 1168               		lds r25,(currentScheduler+4)+1
 1169               		std Z+1,r25
 1170 054a 1895      		st Z,r24
 1172               	.LM80:
 209:kernel.c      **** }
 1173               	92,.LM80-.LFBB8
 1174               	.LM80:
 1175               		ldi r30,lo8(89)
 1176               		ldi r31,hi8(89)
 1177               		st Z,__zero_reg__
 1179               	.LM81:
 1180               	/* #APP */
 1181               	 ;  193 "kernel.c" 1
 1182               		reti
 1183               	 ;  0 "" 2
 1184               	/* #NOAPP */
 1185               	.L37:
DEFINED SYMBOLS
                            *ABS*:00000000 kernel.c
/tmp/user/501/ccLpBqeZ.s:2      *ABS*:0000003f __SREG__
/tmp/user/501/ccLpBqeZ.s:3      *ABS*:0000003e __SP_H__
/tmp/user/501/ccLpBqeZ.s:4      *ABS*:0000003d __SP_L__
/tmp/user/501/ccLpBqeZ.s:5      *ABS*:00000034 __CCP__
/tmp/user/501/ccLpBqeZ.s:6      *ABS*:00000000 __tmp_reg__
/tmp/user/501/ccLpBqeZ.s:7      *ABS*:00000001 __zero_reg__
/tmp/user/501/ccLpBqeZ.s:124    .bss:00000000 currentTime
/tmp/user/501/ccLpBqeZ.s:131    .text:00000000 initTask
/tmp/user/501/ccLpBqeZ.s:273    .text:000000c2 sleep
                            *COM*:00000006 currentScheduler
/tmp/user/501/ccLpBqeZ.s:379    .text:00000162 decrementPause
/tmp/user/501/ccLpBqeZ.s:496    .text:00000206 allTasksFinished
/tmp/user/501/ccLpBqeZ.s:581    .text:00000268 startRRScheduler
/tmp/user/501/ccLpBqeZ.s:722    .text:00000340 nextScheduleItem
/tmp/user/501/ccLpBqeZ.s:766    .text:00000376 incrementTime
/tmp/user/501/ccLpBqeZ.s:874    .text:00000438 __vector_11

UNDEFINED SYMBOLS
__divmodhi4
__udivmodhi4
__do_clear_bss
